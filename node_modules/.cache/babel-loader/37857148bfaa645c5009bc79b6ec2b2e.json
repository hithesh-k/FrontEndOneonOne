{"ast":null,"code":"import _objectSpread from \"/home/nineleaps/FrontEnd-One-on-One/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/nineleaps/FrontEnd-One-on-One/src/Pages/Feedback.js\";\nimport axios from \"axios\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Icon, Label, TextArea, TabPane, Divider } from 'semantic-ui-react';\nimport Footer from \"../Components/Footer\";\nimport Header from \"../Components/Header\";\nimport MonthYearPicker from 'react-month-year-picker';\nimport apiconstants from '../employee/config';\nimport \"../Managerpg1/Managermain.css\";\nimport Tab from \"../Components/Tab\";\nimport Year from \"../Components/YearMonthPicker\"; // import Year from \"../Components/YearPick\"\n\nimport Month from \"../Components/MonthYear/Month\";\nvar bgColors = {\n  \"Default\": \"#81b71a\",\n  \"Blue\": \"#00B1E1\",\n  \"Cyan\": \"#\",\n  \"Green\": \"#98FB98\",\n  \"Red\": \"#E9573F\",\n  \"Yellow\": \"#d3d3d3\"\n};\n\nclass Managerpage3 extends React.Component {\n  constructor() {\n    super();\n\n    this.time = async () => {\n      console.log(\"state is:\" + JSON.stringify(this.state));\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n      const response = await axios({\n        method: 'get',\n        url: apiconstants.URL + \"/employeetimestamp/\".concat(id, \"/\").concat(month)\n      });\n      console.log(response.data.time);\n      return await response.data.time;\n    };\n\n    this.handleQuesChange = i => evt => {\n      const newques = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        console.log('row', row);\n        return _objectSpread({}, row, {\n          question: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newques\n      });\n    };\n\n    this.handleAnsChange = i => evt => {\n      const newanswer = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        return _objectSpread({}, row, {\n          answer: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newanswer\n      });\n    };\n\n    this.handleRemarkChange = i => evt => {\n      const newr = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        return _objectSpread({}, row, {\n          remark: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newr\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault(); // this.setState({\n      //   redirect: true\n      // })\n\n      console.log(JSON.stringify(this.state.dynamic));\n\n      for (let i = 0; i < this.state.dynamic.length; i++) {\n        if (this.state.dynamic[i].question == '' && this.state.dynamic[i].answer == '' && this.state.dynamic[i].remark == '') {\n          await this.setState({\n            nullValue: false\n          }); // this.setState({\n          //     redirect: true\n          //   })\n        } else if (this.state.dynamic[i].question == '' || this.state.dynamic[i].answer == '') {\n          this.setState({\n            nullValue: true\n          });\n          break;\n        }\n\n        if (this.state.nullValue == true) {\n          alert(\"Fields can't be empty\");\n        } else {\n          let id = this.props.match.params.id;\n          let month = this.props.match.params.month;\n          console.log(this.state.dynamic, 'state');\n          fetch(apiconstants.URL + \"feedback/\".concat(id, \"/\").concat(this.state.mm, \"/\").concat(this.state.yr), {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.dynamic)\n          }).then(res => res).then(res => {\n            console.log(res.status);\n          });\n          this.setState({\n            redirect: true\n          }); //  if (this.state.redirect) {\n          //   return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n          // }\n        }\n      }\n\n      ;\n    };\n\n    this.handleAdd = () => {\n      this.setState({\n        dynamic: this.state.dynamic.concat({\n          id: this.props.match.params.id,\n          question: \"\",\n          answer: \"\",\n          remark: \"\",\n          month: this.props.match.params.month\n        })\n      });\n    };\n\n    this.setRedirect1 = event => {\n      event.preventDefault();\n      console.log(this.state);\n      this.setState({\n        redirect1: true\n      });\n    };\n\n    this.store_Year = year => {\n      this.setState({\n        yr: year\n      });\n    };\n\n    this.store_Month = mon => {\n      this.setState({\n        mm: mon + 1\n      });\n    };\n\n    this.state = {\n      dynamic: [],\n      disabled: false,\n      nullValue: false,\n      mm: new Date().getMonth(),\n      yr: new Date().getFullYear()\n    };\n  }\n\n  componentWillMount() {\n    let id = this.props.match.params.id;\n    let month = this.props.match.params.month;\n    let year = \"2019\";\n    var monthh;\n    const response = axios({\n      method: 'post',\n      url: apiconstants.URL + \"prepopulate/\".concat(id, \"/\").concat(this.state.mm, \"/\").concat(this.state.yr)\n    }).then(response => {\n      console.log(response.data);\n      this.setState({\n        dynamic: response.data\n      }); // response.data.map((dynamic) => { \n      //   console.log(dynamic)\n      //   this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n      // })\n      // if (response.data.length != 0) {\n      //   const da = [];\n      //   console.log(JSON.stringify(response.data))\n      //   response.data.map((datas) => {\n      //     if (datas.type === 'd') {\n      //       da.push(datas);\n      //     }\n      //   })\n      //   this.setState({ dynamic: da })\n      // }\n      // else {\n      //   this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n      // }\n    });\n  }\n\n  async componentDidMount() {\n    console.log(\"Component Did mount started\");\n    let val = await this.time();\n    console.log(\"value is \" + val);\n\n    if (val === 1) {\n      console.log(\"it entered the if \" + val);\n      await setTimeout(() => {\n        this.setState({\n          disabled: true\n        });\n      });\n    }\n  }\n\n  render() {\n    // {\n    //   if (this.state.redirect) {\n    //     return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n    //   }\n    // }\n    console.log(this.state.mm, this.state.yr);\n    var monthh = this.state.mm;\n    var yearr = this.state.yr;\n    console.log(monthh, yearr);\n    {\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n\n      if (this.state.redirect1) {\n        return React.createElement(Redirect, {\n          to: \"/manager\" + \"/\" + this.props.match.params.mid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        });\n      }\n    }\n    var mid = this.props.match.params.mid;\n    return React.createElement(\"div\", {\n      className: \"manbg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Header, {\n      mid: mid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      mid: this.props.match.params.mid,\n      id: this.props.match.params.id,\n      month: this.props.match.params.month,\n      emp: this.props.match.params.emp,\n      pro: this.props.match.params.pro // pathURL={pathURL}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui calender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(Label, {\n      size: \"large\",\n      style: {\n        color: \"black\",\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), this.props.match.params.pro), React.createElement(Year, {\n      changeYear: this.store_Year.bind(this),\n      changeMonth: this.store_Month.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      style: {\n        color: \" #303030\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"Employee Feedback-2 :\", React.createElement(\"span\", {\n      style: {\n        color: \"darkblue\",\n        fontWeight: \"bolder\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, this.props.match.params.emp), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, this.state.dynamic.map((row, i) => React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"10%\"\n      },\n      className: \"form1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      style: {\n        color: \"black\",\n        height: \"60px\"\n      },\n      placeholder: \"Enter your question\",\n      value: row.question,\n      disabled: i + 1 < 5 ? true : false,\n      onChange: this.handleQuesChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        color: \"black\"\n      },\n      placeholder: \"Enter answer here\",\n      value: row.answer,\n      disabled: this.state.disabled,\n      style: {\n        backgroundColor: bgColors.Yellow\n      },\n      onChange: this.handleAnsChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, row.answer), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        color: \"black\",\n        height: \"60px\"\n      },\n      placeholder: \"Remarks. If any?\",\n      style: {\n        backgroundColor: bgColors.Green\n      } // value={row.remark}\n      ,\n      disabled: this.state.disabled,\n      onChange: this.handleRemarkChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, row.remark))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.setRedirect1,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui blue button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"arrow circle left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), \"Go Back\"), React.createElement(Button, {\n      type: \"button\",\n      onClick: this.handleAdd,\n      className: \"ui blue button\",\n      style: {\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \" Add more questions \"), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui green button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"   Save \", React.createElement(Icon, {\n      name: \"arrow circle right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Managerpage3;","map":{"version":3,"sources":["/home/nineleaps/FrontEnd-One-on-One/src/Pages/Feedback.js"],"names":["axios","React","Redirect","Button","Form","Icon","Label","TextArea","TabPane","Divider","Footer","Header","MonthYearPicker","apiconstants","Tab","Year","Month","bgColors","Managerpage3","Component","constructor","time","console","log","JSON","stringify","state","id","props","match","params","month","response","method","url","URL","data","handleQuesChange","i","evt","newques","dynamic","map","row","j","question","target","value","setState","handleAnsChange","newanswer","answer","handleRemarkChange","newr","remark","handleSubmit","e","preventDefault","length","nullValue","alert","fetch","mm","yr","headers","body","then","res","status","redirect","handleAdd","concat","setRedirect1","event","redirect1","store_Year","year","store_Month","mon","disabled","Date","getMonth","getFullYear","componentWillMount","monthh","componentDidMount","val","setTimeout","render","yearr","mid","emp","pro","color","width","bind","fontWeight","paddingLeft","height","backgroundColor","Yellow","Green"],"mappings":"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","sourcesContent":["\nimport axios from \"axios\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Icon, Label, TextArea, TabPane, Divider } from 'semantic-ui-react';\nimport Footer from \"../Components/Footer\";\nimport Header from \"../Components/Header\";\nimport MonthYearPicker from 'react-month-year-picker';\nimport apiconstants from '../employee/config';\nimport \"../Managerpg1/Managermain.css\";\nimport Tab from \"../Components/Tab\"\nimport Year from \"../Components/YearMonthPicker\"\n// import Year from \"../Components/YearPick\"\nimport Month from \"../Components/MonthYear/Month\"\n\nvar bgColors = {\n  \"Default\": \"#81b71a\",\n  \"Blue\": \"#00B1E1\",\n  \"Cyan\": \"#\",\n  \"Green\": \"#98FB98\",\n  \"Red\": \"#E9573F\",\n  \"Yellow\": \"#d3d3d3\",\n};\n\nclass Managerpage3 extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      dynamic: [],\n      disabled: false,\n      nullValue: false,\n      mm:(new Date().getMonth()),\n      yr:(new Date().getFullYear())\n      \n    };\n   \n  }\n\n  componentWillMount() {\n  \n    let id = this.props.match.params.id\n    let month = this.props.match.params.month\n    let year = \"2019\"\n    var monthh\n    const response = axios({\n      method: 'post',\n      url: apiconstants.URL + `prepopulate/${id}/${this.state.mm}/${this.state.yr}`,\n    })\n      .then(response => {\n        console.log(response.data)\n        this.setState({ dynamic: response.data })\n        // response.data.map((dynamic) => { \n        //   console.log(dynamic)\n        //   this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n\n        // })\n\n        // if (response.data.length != 0) {\n        //   const da = [];\n        //   console.log(JSON.stringify(response.data))\n        //   response.data.map((datas) => {\n        //     if (datas.type === 'd') {\n        //       da.push(datas);\n        //     }\n        //   })\n        //   this.setState({ dynamic: da })\n        // }\n\n        // else {\n        //   this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n\n        // }\n      })\n  }\n  async componentDidMount() {\n    console.log(\"Component Did mount started\")\n    let val = await this.time();\n    console.log(\"value is \" + val)\n    if (val === 1) {\n      console.log(\"it entered the if \" + val)\n      await setTimeout(() => { this.setState({ disabled: true }) });\n    }\n\n  }\n  \n  time = async () => {\n    console.log(\"state is:\" + JSON.stringify(this.state));\n\n    var id = this.props.match.params.id\n    var month = this.props.match.params.month\n\n    const response = await axios({\n\n      method: 'get',\n      url: apiconstants.URL + `/employeetimestamp/${id}/${month}`,\n    })\n    console.log(response.data.time)\n    return await response.data.time;\n  }\n\n  handleQuesChange = i => evt => {\n    const newques = this.state.dynamic.map((row, j) => {\n      if (i !== j) return row;\n      console.log('row', row)\n      return { ...row, question: evt.target.value };\n    });\n\n    this.setState({ dynamic: newques });\n  };\n  handleAnsChange = i => evt => {\n    const newanswer = this.state.dynamic.map((row, j) => {\n      if (i !== j) return row;\n      return { ...row, answer: evt.target.value };\n    });\n\n    this.setState({ dynamic: newanswer });\n  };\n  handleRemarkChange = i => evt => {\n    const newr = this.state.dynamic.map((row, j) => {\n      if (i !== j) return row;\n      return { ...row, remark: evt.target.value };\n    });\n\n    this.setState({ dynamic: newr });\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    // this.setState({\n    //   redirect: true\n    // })\n    console.log(JSON.stringify(this.state.dynamic));\n    for (let i = 0; i < this.state.dynamic.length; i++) {\n      if ((this.state.dynamic[i].question == '' && this.state.dynamic[i].answer == '' && this.state.dynamic[i].remark == '')) {\n        await this.setState({ nullValue: false })\n        // this.setState({\n        //     redirect: true\n        //   })\n\n      }\n      else if ((this.state.dynamic[i].question == '' || this.state.dynamic[i].answer == '')) {\n        this.setState({ nullValue: true })\n        break;\n      }\n\n\n      if (this.state.nullValue == true) {\n        alert(\"Fields can't be empty\")\n\n      }\n      else {\n        let id = this.props.match.params.id\n        let month = this.props.match.params.month\n        console.log(this.state.dynamic, 'state');\n        \n        fetch(apiconstants.URL + `feedback/${id}/${this.state.mm}/${this.state.yr}`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.state.dynamic)\n\n        }).then(res => res)\n          .then(res => {\n            console.log(res.status)\n\n          })\n        this.setState({\n          redirect: true\n        })\n\n        //  if (this.state.redirect) {\n        //   return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n\n        // }\n\n      }\n\n    };\n  }\n\n  handleAdd = () => {\n    this.setState({\n      dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month })\n    \n    });\n  };\n\n  setRedirect1 = (event) => {\n    event.preventDefault();\n    console.log(this.state)\n    this.setState({\n      redirect1: true\n    })\n  };\n  store_Year=(year)=>{\n    this.setState({\n      yr:year\n    })\n  }\n  store_Month=(mon)=>{\n    this.setState({\n      mm:mon+1\n    })\n  }\n\n  render() {\n    // {\n    //   if (this.state.redirect) {\n    //     return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n\n    //   }\n    // }\n    console.log(this.state.mm,this.state.yr)\n    var monthh =this.state.mm;\nvar yearr=this.state.yr;\nconsole.log(monthh,yearr)\n\n    {\n      var id = this.props.match.params.id\n      var month = this.props.match.params.month\n      if (this.state.redirect1) {\n        return <Redirect to={\"/manager\" + \"/\" + (this.props.match.params.mid)} />;\n\n      }\n    }\n    var mid = this.props.match.params.mid;\n    return (\n      <div className=\"manbg\">\n        <Header mid={mid} />\n        <Tab mid={this.props.match.params.mid}\n          id={this.props.match.params.id}\n          month={this.props.match.params.month}\n          emp={this.props.match.params.emp}\n          pro={this.props.match.params.pro}\n        // pathURL={pathURL}\n        />\n        <div className=\"ui calender\"></div>\n        <Label size='large' style={{ color: \"black\", width: \"auto\" }} ><Icon name='user' />\n\n          {this.props.match.params.pro}\n        </Label >\n        <Year changeYear={this.store_Year.bind(this)} changeMonth={this.store_Month.bind(this)}/>\n\n        {/* <Month/> */}\n        <br />\n        <br />\n        <br />\n\n        <h1 style={{ color: \" #303030\" }}>Employee Feedback-2 :<span style={{ color: \"darkblue\", fontWeight: \"bolder\" }}>{this.props.match.params.emp}</span> </h1>\n        <br />\n        <Form >\n          {this.state.dynamic.map((row, i) => (\n            <div style={{ paddingLeft: \"10%\" }} className=\"form1\">\n              <TextArea style={{ color: \"black\", height: \"60px\" }}\n                placeholder=\"Enter your question\"\n                value={row.question}\n                disabled={i + 1 < 5 ? true : false}\n                onChange={this.handleQuesChange(i)}\n                required />\n\n              <br />\n              <TextArea style={{ color: \"black\" }}\n                placeholder='Enter answer here'\n                value={row.answer}\n                disabled={this.state.disabled}\n                style={{ backgroundColor: bgColors.Yellow }}\n                onChange={this.handleAnsChange(i)}\n                required >{row.answer}</TextArea>\n              <br />\n\n              <TextArea style={{ color: \"black\", height: \"60px\" }}\n                placeholder='Remarks. If any?'\n                style={{ backgroundColor: bgColors.Green }}\n                // value={row.remark}\n                disabled={this.state.disabled}\n                onChange={this.handleRemarkChange(i)}\n                required  >{row.remark}</TextArea>\n            </div>\n          ))}\n          <br />\n          <br />\n          <br />\n\n          <button onClick={this.setRedirect1}\n            style={{ width: \"auto\", }}\n            className=\"ui blue button\"> <Icon name=\"arrow circle left\" />Go Back</button>\n\n          <Button\n            type=\"button\"\n            onClick={this.handleAdd}\n            className=\"ui blue button\"\n            style={{ width: \"auto\" }} > Add more questions </Button>\n          <Button onClick={this.handleSubmit} style={{ width: \"auto\" }} className=\"ui green button\" >   Save <Icon name=\"arrow circle right\" /></Button>\n        </Form>\n        <br /><br /><br /><br /><br /><br /><br />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Managerpage3;\n\n"]},"metadata":{},"sourceType":"module"}