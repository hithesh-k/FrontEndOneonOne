{"ast":null,"code":"import _objectSpread from \"/home/nineleaps/FrontEnd-One-on-One/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/nineleaps/FrontEnd-One-on-One/src/Pages/Feedback.js\";\nimport axios from \"axios\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Icon, Label, TextArea, TabPane, Divider } from 'semantic-ui-react';\nimport Footer from \"../Components/Footer\";\nimport Header from \"../Components/Header\";\nimport MonthYearPicker from 'react-month-year-picker';\nimport apiconstants from '../employee/config';\nimport \"../Managerpg1/Managermain.css\";\nimport Tab from \"../Components/Tab\";\nimport Year from \"../Components/YearMonthPicker\"; // import Year from \"../Components/YearPick\"\n\nimport Month from \"../Components/MonthYear/Month\";\nvar bgColors = {\n  \"Default\": \"#81b71a\",\n  \"Blue\": \"#00B1E1\",\n  \"Cyan\": \"#\",\n  \"Green\": \"#ddfada\",\n  \"Red\": \"#E9573F\",\n  \"Yellow\": \"#d3d3d3\"\n};\n\nclass Managerpage3 extends React.Component {\n  constructor() {\n    super();\n\n    this.handleQuesChange = i => evt => {\n      const newques = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        console.log('row', row);\n        return _objectSpread({}, row, {\n          question: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newques\n      });\n    };\n\n    this.handleAnsChange = i => evt => {\n      const newanswer = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        return _objectSpread({}, row, {\n          answer: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newanswer\n      });\n    };\n\n    this.handleRemarkChange = i => evt => {\n      const newr = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        return _objectSpread({}, row, {\n          remark: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newr\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let id = this.props.match.params.id;\n      fetch(apiconstants.URL + \"feedback/\".concat(id, \"/\", 9, \"/\", 2019), {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.dynamic)\n      });\n    };\n\n    this.handleAdd = () => {\n      this.setState({\n        dynamic: this.state.dynamic.concat({\n          id: this.props.match.params.id,\n          question: \"\",\n          answer: \"\",\n          remark: \"\",\n          month: this.props.match.params.month\n        })\n      });\n    };\n\n    this.setRedirect1 = event => {\n      event.preventDefault();\n      console.log(this.state);\n      this.setState({\n        redirect1: true\n      });\n    };\n\n    this.store_Year = year => {\n      this.setState({\n        yr: year\n      });\n    };\n\n    this.store_Month = mon => {\n      this.setState({\n        mm: mon\n      });\n    };\n\n    this.state = {\n      dynamic: [],\n      disabled: false,\n      nullValue: false,\n      // mm:(new Date().getMonth()+1),\n      // yr:(new Date().getFullYear())\n      mm: '',\n      yr: ''\n    };\n  }\n\n  componentWillMount() {\n    let id = this.props.match.params.id;\n    let month = this.props.match.params.month;\n    let year = \"2019\"; // var month1={monthh};\n    // var year1={yearr};\n    // console.log(month1,year1)\n\n    const response = axios({\n      method: 'post',\n      url: apiconstants.URL + \"prepopulate/\".concat(id, \"/\").concat(this.state.mm, \"/\").concat(this.state.yr)\n    }).then(response => {\n      console.log(response.data);\n      this.setState({\n        dynamic: response.data\n      }); // response.data.map((dynamic) => { \n      //   console.log(dynamic)\n      //   this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n      // })\n      // if (response.data.length != 0) {\n      //   const da = [];\n      //   console.log(JSON.stringify(response.data))\n      //   response.data.map((datas) => {\n      //     if (datas.type === 'd') {\n      //       da.push(datas);\n      //     }\n      //   })\n      //   this.setState({ dynamic: da })\n      // }\n      // else {\n      //   this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n      // }\n    });\n  } // async componentDidMount() {\n  //   console.log(\"Component Did mount started\")\n  //   let val = await this.time();\n  //   console.log(\"value is \" + val)\n  //   if (val === 1) {\n  //     console.log(\"it entered the if \" + val)\n  //     await setTimeout(() => { this.setState({ disabled: true }) });\n  //   }\n  // }\n  // time = async () => {\n  //   console.log(\"state is:\" + JSON.stringify(this.state));\n  //   var id = this.props.match.params.id\n  //   var month = this.props.match.params.month\n  //   const response = await axios({\n  //     method: 'get',\n  //     url: apiconstants.URL + `/employeetimestamp/${id}/${month}`,\n  //   })\n  //   console.log(response.data.time)\n  //   return await response.data.time;\n  // }\n\n\n  render() {\n    // {\n    //   if (this.state.redirect) {\n    //     return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n    //   }\n    // }\n    console.log(this.state.mm, this.state.yr); //     var{ monthh} =this.state.mm;\n    // var {yearr}=this.state.yr;\n    // console.log(monthh,yearr)\n\n    {\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n\n      if (this.state.redirect1) {\n        return React.createElement(Redirect, {\n          to: \"/manager\" + \"/\" + this.props.match.params.mid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        });\n      }\n    }\n    var mid = this.props.match.params.mid;\n    return React.createElement(\"div\", {\n      className: \"manbg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Header, {\n      mid: mid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      mid: this.props.match.params.mid,\n      id: this.props.match.params.id,\n      month: this.props.match.params.month,\n      emp: this.props.match.params.emp,\n      pro: this.props.match.params.pro // pathURL={pathURL}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui calender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(Label, {\n      size: \"large\",\n      style: {\n        color: \"black\",\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), this.props.match.params.pro), React.createElement(Year, {\n      changeYear: this.store_Year,\n      changeMonth: this.store_Month,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      style: {\n        color: \" #303030\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Employee Feedback-2 :\", React.createElement(\"span\", {\n      style: {\n        color: \"darkblue\",\n        fontWeight: \"bolder\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, this.props.match.params.emp), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, this.state.dynamic.map((row, i) => React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"10%\"\n      },\n      className: \"form1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      style: {\n        color: \"black\",\n        height: \"60px\"\n      },\n      placeholder: \"Enter your question\",\n      value: row.question,\n      disabled: i + 1 < 5 ? true : false,\n      onChange: this.handleQuesChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        color: \"black\"\n      },\n      placeholder: \"Enter answer here\",\n      value: row.answer,\n      disabled: this.state.disabled,\n      style: {\n        backgroundColor: bgColors.Yellow\n      },\n      onChange: this.handleAnsChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, row.answer), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        color: \"black\",\n        height: \"60px\"\n      },\n      placeholder: \"Remarks. If any?\",\n      style: {\n        backgroundColor: bgColors.Green\n      } // value={row.remark}\n      ,\n      disabled: this.state.disabled,\n      onChange: this.handleRemarkChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, row.remark))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.setRedirect1,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui blue button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"arrow circle left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), \"Go Back\"), React.createElement(Button, {\n      type: \"button\",\n      onClick: this.handleAdd,\n      className: \"ui blue button\",\n      style: {\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \" Add more questions \"), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui green button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"   Save \", React.createElement(Icon, {\n      name: \"arrow circle right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Managerpage3;","map":{"version":3,"sources":["/home/nineleaps/FrontEnd-One-on-One/src/Pages/Feedback.js"],"names":["axios","React","Redirect","Button","Form","Icon","Label","TextArea","TabPane","Divider","Footer","Header","MonthYearPicker","apiconstants","Tab","Year","Month","bgColors","Managerpage3","Component","constructor","handleQuesChange","i","evt","newques","state","dynamic","map","row","j","console","log","question","target","value","setState","handleAnsChange","newanswer","answer","handleRemarkChange","newr","remark","handleSubmit","e","preventDefault","id","props","match","params","fetch","URL","method","headers","body","JSON","stringify","handleAdd","concat","month","setRedirect1","event","redirect1","store_Year","year","yr","store_Month","mon","mm","disabled","nullValue","componentWillMount","response","url","then","data","render","mid","emp","pro","color","width","fontWeight","paddingLeft","height","backgroundColor","Yellow","Green"],"mappings":"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","sourcesContent":["\nimport axios from \"axios\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Icon, Label, TextArea, TabPane, Divider } from 'semantic-ui-react';\nimport Footer from \"../Components/Footer\";\nimport Header from \"../Components/Header\";\nimport MonthYearPicker from 'react-month-year-picker';\nimport apiconstants from '../employee/config';\nimport \"../Managerpg1/Managermain.css\";\nimport Tab from \"../Components/Tab\"\nimport Year from \"../Components/YearMonthPicker\"\n// import Year from \"../Components/YearPick\"\nimport Month from \"../Components/MonthYear/Month\"\n\nvar bgColors = {\n  \"Default\": \"#81b71a\",\n  \"Blue\": \"#00B1E1\",\n  \"Cyan\": \"#\",\n  \"Green\": \"#ddfada\",\n  \"Red\": \"#E9573F\",\n  \"Yellow\": \"#d3d3d3\",\n};\n\nclass Managerpage3 extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      dynamic: [],\n      disabled: false,\n      nullValue: false,\n      // mm:(new Date().getMonth()+1),\n      // yr:(new Date().getFullYear())\n      mm:'',\n      yr:''\n      \n    };\n  }\n\n  componentWillMount() {\n  \n    let id = this.props.match.params.id\n    let month = this.props.match.params.month\n    let year = \"2019\"\n    // var month1={monthh};\n    // var year1={yearr};\n    // console.log(month1,year1)\n    const response = axios({\n      method: 'post',\n      url: apiconstants.URL + `prepopulate/${id}/${this.state.mm}/${this.state.yr}`,\n    })\n      .then(response => {\n        console.log(response.data)\n        this.setState({ dynamic: response.data })\n        // response.data.map((dynamic) => { \n        //   console.log(dynamic)\n        //   this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n\n        // })\n\n        // if (response.data.length != 0) {\n        //   const da = [];\n        //   console.log(JSON.stringify(response.data))\n        //   response.data.map((datas) => {\n        //     if (datas.type === 'd') {\n        //       da.push(datas);\n        //     }\n        //   })\n        //   this.setState({ dynamic: da })\n        // }\n\n        // else {\n        //   this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n\n        // }\n      })\n  }\n  // async componentDidMount() {\n  //   console.log(\"Component Did mount started\")\n  //   let val = await this.time();\n  //   console.log(\"value is \" + val)\n  //   if (val === 1) {\n  //     console.log(\"it entered the if \" + val)\n  //     await setTimeout(() => { this.setState({ disabled: true }) });\n  //   }\n\n  // }\n  \n  // time = async () => {\n  //   console.log(\"state is:\" + JSON.stringify(this.state));\n\n  //   var id = this.props.match.params.id\n  //   var month = this.props.match.params.month\n\n  //   const response = await axios({\n\n  //     method: 'get',\n  //     url: apiconstants.URL + `/employeetimestamp/${id}/${month}`,\n  //   })\n  //   console.log(response.data.time)\n  //   return await response.data.time;\n  // }\n\n  handleQuesChange = i => evt => {\n    const newques = this.state.dynamic.map((row, j) => {\n      if (i !== j) return row;\n      console.log('row', row)\n      return { ...row, question: evt.target.value };\n    });\n\n    this.setState({ dynamic: newques });\n  };\n  handleAnsChange = i => evt => {\n    const newanswer = this.state.dynamic.map((row, j) => {\n      if (i !== j) return row;\n      return { ...row, answer: evt.target.value };\n    });\n\n    this.setState({ dynamic: newanswer });\n  };\n  handleRemarkChange = i => evt => {\n    const newr = this.state.dynamic.map((row, j) => {\n      if (i !== j) return row;\n      return { ...row, remark: evt.target.value };\n    });\n\n    this.setState({ dynamic: newr });\n  };\n\nhandleSubmit=async(e)=>{\n  e.preventDefault();\n  let id = this.props.match.params.id\n  fetch(apiconstants.URL + `feedback/${id}/${9}/${2019}`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.dynamic)\n  \n})\n}\n\n  // handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   // this.setState({\n  //   //   redirect: true\n  //   // })\n  //   console.log(JSON.stringify(this.state.dynamic));\n  //   for (let i = 0; i < this.state.dynamic.length; i++) {\n  //     if ((this.state.dynamic[i].question == '' && this.state.dynamic[i].answer == '' && this.state.dynamic[i].remark == '')) {\n  //       await this.setState({ nullValue: false })\n  //       // this.setState({\n  //       //     redirect: true\n  //       //   })\n\n  //     }\n  //     else if ((this.state.dynamic[i].question == '' || this.state.dynamic[i].answer == '')) {\n  //       this.setState({ nullValue: true })\n  //       break;\n  //     }\n\n\n  //     if (this.state.nullValue == true) {\n  //       alert(\"Fields can't be empty\")\n\n  //     }\n  //     else {\n  //       let id = this.props.match.params.id\n  //       let month = this.props.match.params.month\n  //       console.log(this.state.dynamic, 'state');\n        \n  //       fetch(apiconstants.URL + `feedback/${id}/${this.state.mm}/${this.state.yr}`, {\n  //         method: 'PATCH',\n  //         headers: {\n  //           'Content-Type': 'application/json'\n  //         },\n  //         body: JSON.stringify(this.state.dynamic)\n\n  //       }).then(res => res)\n  //         .then(res => {\n  //           console.log(res.status)\n  //           console.log(res.status)\n\n  //         })\n  //       this.setState({\n  //         redirect: true\n  //       })\n\n  //       //  if (this.state.redirect) {\n  //       //   return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n\n  //       // }\n\n  //     }\n\n  //   };\n  // }\n\n  handleAdd = () => {\n    this.setState({\n      dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month })\n    \n    });\n  };\n\n  setRedirect1 = (event) => {\n    event.preventDefault();\n    console.log(this.state)\n    this.setState({\n      redirect1: true\n    })\n  };\n  store_Year=(year)=>{\n    this.setState({\n      yr:year\n    })\n  }\n  store_Month=(mon)=>{\n    this.setState({\n      mm:mon\n    })\n  }\n\n  render() {\n    // {\n    //   if (this.state.redirect) {\n    //     return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n\n    //   }\n    // }\n    console.log(this.state.mm,this.state.yr)\n//     var{ monthh} =this.state.mm;\n// var {yearr}=this.state.yr;\n// console.log(monthh,yearr)\n\n    {\n      var id = this.props.match.params.id\n      var month = this.props.match.params.month\n      if (this.state.redirect1) {\n        return <Redirect to={\"/manager\" + \"/\" + (this.props.match.params.mid)} />;\n\n      }\n    }\n    var mid = this.props.match.params.mid;\n    return (\n      <div className=\"manbg\">\n        <Header mid={mid} />\n        <Tab mid={this.props.match.params.mid}\n          id={this.props.match.params.id}\n          month={this.props.match.params.month}\n          emp={this.props.match.params.emp}\n          pro={this.props.match.params.pro}\n        // pathURL={pathURL}\n        />\n        <div className=\"ui calender\"></div>\n        <Label size='large' style={{ color: \"black\", width: \"auto\" }} ><Icon name='user' />\n\n          {this.props.match.params.pro}\n        </Label >\n        <Year changeYear={this.store_Year} changeMonth={this.store_Month}/>\n\n        {/* <Month/> */}\n        <br />\n        <br />\n        <br />\n\n        <h1 style={{ color: \" #303030\" }}>Employee Feedback-2 :<span style={{ color: \"darkblue\", fontWeight: \"bolder\" }}>{this.props.match.params.emp}</span> </h1>\n        <br />\n        <Form >\n          {this.state.dynamic.map((row, i) => (\n            <div style={{ paddingLeft: \"10%\" }} className=\"form1\">\n              <TextArea style={{ color: \"black\", height: \"60px\" }}\n                placeholder=\"Enter your question\"\n                value={row.question}\n                disabled={i + 1 < 5 ? true : false}\n                onChange={this.handleQuesChange(i)}\n                required />\n\n              <br />\n              <TextArea style={{ color: \"black\" }}\n                placeholder='Enter answer here'\n                value={row.answer}\n                disabled={this.state.disabled}\n                style={{ backgroundColor: bgColors.Yellow }}\n                onChange={this.handleAnsChange(i)}\n                required >{row.answer}</TextArea>\n              <br />\n\n              <TextArea style={{ color: \"black\", height: \"60px\" }}\n                placeholder='Remarks. If any?'\n                style={{ backgroundColor: bgColors.Green }}\n                // value={row.remark}\n                disabled={this.state.disabled}\n                onChange={this.handleRemarkChange(i)}\n                required  >{row.remark}</TextArea>\n            </div>\n          ))}\n          <br />\n          <br />\n          <br />\n\n          <button onClick={this.setRedirect1}\n            style={{ width: \"auto\", }}\n            className=\"ui blue button\"> <Icon name=\"arrow circle left\" />Go Back</button>\n\n          <Button\n            type=\"button\"\n            onClick={this.handleAdd}\n            className=\"ui blue button\"\n            style={{ width: \"auto\" }} > Add more questions </Button>\n          <Button onClick={this.handleSubmit} style={{ width: \"auto\" }} className=\"ui green button\" >   Save <Icon name=\"arrow circle right\" /></Button>\n        </Form>\n       \n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Managerpage3;\n\n"]},"metadata":{},"sourceType":"module"}