{"ast":null,"code":"import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \"@import url(\\\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\\\");\\n@import url(\\\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\\\");\\n@font-face {\\n  font-family: 'Open Sans';\\n  font-style: italic;\\n  font-weight: 300;\\n  src: local('Open Sans Light Italic'), local('OpenSans-LightItalic'), url(https://fonts.gstatic.com/s/opensans/v15/memnYaGs126MiZpBA-UFUKWyV9hrIqY.ttf) format('truetype');\\n}\\n@font-face {\\n  font-family: 'Open Sans';\\n  font-style: italic;\\n  font-weight: 400;\\n  src: local('Open Sans Italic'), local('OpenSans-Italic'), url(https://fonts.gstatic.com/s/opensans/v15/mem6YaGs126MiZpBA-UFUK0Zdcg.ttf) format('truetype');\\n}\\n@font-face {\\n  font-family: 'Open Sans';\\n  font-style: italic;\\n  font-weight: 700;\\n  src: local('Open Sans Bold Italic'), local('OpenSans-BoldItalic'), url(https://fonts.gstatic.com/s/opensans/v15/memnYaGs126MiZpBA-UFUKWiUNhrIqY.ttf) format('truetype');\\n}\\n@font-face {\\n  font-family: 'Open Sans';\\n  font-style: normal;\\n  font-weight: 300;\\n  src: local('Open Sans Light'), local('OpenSans-Light'), url(https://fonts.gstatic.com/s/opensans/v15/mem5YaGs126MiZpBA-UN_r8OUuhs.ttf) format('truetype');\\n}\\n@font-face {\\n  font-family: 'Open Sans';\\n  font-style: normal;\\n  font-weight: 400;\\n  src: local('Open Sans Regular'), local('OpenSans-Regular'), url(https://fonts.gstatic.com/s/opensans/v15/mem8YaGs126MiZpBA-UFVZ0e.ttf) format('truetype');\\n}\\n@font-face {\\n  font-family: 'Open Sans';\\n  font-style: normal;\\n  font-weight: 700;\\n  src: local('Open Sans Bold'), local('OpenSans-Bold'), url(https://fonts.gstatic.com/s/opensans/v15/mem5YaGs126MiZpBA-UN7rgOUuhs.ttf) format('truetype');\\n}\\n.month-year-picker {\\n  margin: auto;\\n  width: 400px;\\n  margin-top: 55px;\\n}\\n.month-year-picker .caption {\\n  padding-left: 10px;\\n  margin-bottom: 20px;\\n  display: block;\\n}\\n.month-year-picker .year-picker {\\n  position: relative;\\n  width: 100%;\\n  margin-bottom: 20px;\\n}\\n.month-year-picker .year-picker span {\\n  font-size: 25px;\\n  color: #5186ed;\\n  text-align: center;\\n  width: 100%;\\n  display: block;\\n}\\n.month-year-picker .year-picker .controls {\\n  position: absolute;\\n  right: 0;\\n  width: 80px;\\n  top: 0;\\n  height: 100%;\\n  display: flex;\\n}\\n.month-year-picker .year-picker .controls .fa {\\n  margin: auto;\\n  cursor: pointer;\\n  font-size: 25px;\\n}\\n.month-year-picker .year-picker .controls .fa.disabled {\\n  cursor: default;\\n  opacity: 0.3;\\n}\\n.month-year-picker .month-picker {\\n  position: relative;\\n  width: 100%;\\n}\\n.month-year-picker .month-picker > div {\\n  position: relative;\\n  width: 100%;\\n  margin: auto;\\n  display: block;\\n}\\n.month-year-picker .month-picker > div > div {\\n  background-color: #ddd;\\n  color: cornflowerblue;\\n  height: 55px;\\n  margin: 10px;\\n  width: 20%;\\n  display: inline-flex;\\n  cursor: pointer;\\n}\\n.month-year-picker .month-picker > div > div.selected {\\n  background-color: #5186ed;\\n  color: #FFFFFF;\\n}\\n.month-year-picker .month-picker > div > div span {\\n  margin: auto;\\n  font-size: 15px;\\n  font-style: normal;\\n}\\n\";\nstyleInject(css);\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar MonthYearPicker = function (_PureComponent) {\n  inherits(MonthYearPicker, _PureComponent);\n\n  function MonthYearPicker(props) {\n    classCallCheck(this, MonthYearPicker);\n\n    var _this = possibleConstructorReturn(this, (MonthYearPicker.__proto__ || Object.getPrototypeOf(MonthYearPicker)).call(this, props));\n\n    _this.handleOnClickLeftArrow = _this.handleOnClickLeftArrow.bind(_this);\n    _this.handleOnClickRightArrow = _this.handleOnClickRightArrow.bind(_this);\n    return _this;\n  }\n\n  createClass(MonthYearPicker, [{\n    key: 'handleOnClickLeftArrow',\n    value: function handleOnClickLeftArrow() {\n      if (this.props.selectedYear <= this.props.minYear) {\n        return;\n      }\n\n      this.props.onChangeYear(this.props.selectedYear - 1);\n    }\n  }, {\n    key: 'handleOnClickRightArrow',\n    value: function handleOnClickRightArrow() {\n      if (this.props.selectedYear >= this.props.maxYear) {\n        return;\n      }\n\n      this.props.onChangeYear(this.props.selectedYear + 1);\n    }\n  }, {\n    key: 'renderMonth',\n    value: function renderMonth(month) {\n      var _this2 = this;\n\n      var text = '';\n\n      switch (month) {\n        case 1:\n          text = 'Jan';\n          break;\n\n        case 2:\n          text = 'Feb';\n          break;\n\n        case 3:\n          text = 'Mar';\n          break;\n\n        case 4:\n          text = 'Apr';\n          break;\n\n        case 5:\n          text = 'May';\n          break;\n\n        case 6:\n          text = 'Jun';\n          break;\n\n        case 7:\n          text = 'Jul';\n          break;\n\n        case 8:\n          text = 'Aug';\n          break;\n\n        case 9:\n          text = 'Sep';\n          break;\n\n        case 10:\n          text = 'Oct';\n          break;\n\n        case 11:\n          text = 'Nov';\n          break;\n\n        case 12:\n          text = 'Dec';\n          break;\n\n        default:\n          break;\n      }\n\n      var className = this.props.selectedMonth === month ? 'selected' : '';\n      return React.createElement('div', {\n        className: className,\n        role: 'button',\n        tabIndex: 0,\n        onClick: function onClick() {\n          return _this2.props.onChangeMonth(month);\n        }\n      }, React.createElement('span', null, text));\n    }\n  }, {\n    key: 'renderLeftArrowButton',\n    value: function renderLeftArrowButton() {\n      if (this.props.selectedYear === this.props.minYear) {\n        return React.createElement('i', {\n          className: 'fa fa-chevron-left disabled'\n        });\n      }\n\n      return React.createElement('i', {\n        role: 'button',\n        tabIndex: 0,\n        onClick: this.handleOnClickLeftArrow,\n        className: 'fa fa-chevron-left'\n      });\n    }\n  }, {\n    key: 'renderRightArrowButton',\n    value: function renderRightArrowButton() {\n      if (this.props.selectedYear === this.props.maxYear) {\n        return React.createElement('i', {\n          className: 'fa fa-chevron-right disabled'\n        });\n      }\n\n      return React.createElement('i', {\n        role: 'button',\n        tabIndex: 0,\n        onClick: this.handleOnClickRightArrow,\n        className: 'fa fa-chevron-right'\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('div', {\n        className: 'month-year-picker'\n      }, React.createElement('span', {\n        className: 'caption'\n      }, this.props.caption), React.createElement('div', {\n        className: 'year-picker'\n      }, React.createElement('span', null, this.props.selectedYear), React.createElement('div', {\n        className: 'controls'\n      }, this.renderLeftArrowButton(), this.renderRightArrowButton())), React.createElement('div', {\n        className: 'month-picker'\n      }, React.createElement('div', null, this.renderMonth(1), this.renderMonth(2), this.renderMonth(3), this.renderMonth(4)), React.createElement('div', null, this.renderMonth(5), this.renderMonth(6), this.renderMonth(7), this.renderMonth(8)), React.createElement('div', null, this.renderMonth(9), this.renderMonth(10), this.renderMonth(11), this.renderMonth(12))));\n    }\n  }]);\n  return MonthYearPicker;\n}(PureComponent);\n\nMonthYearPicker.propTypes = {\n  caption: PropTypes.string,\n  selectedYear: PropTypes.number.isRequired,\n  selectedMonth: PropTypes.number.isRequired,\n  minYear: PropTypes.number.isRequired,\n  maxYear: PropTypes.number.isRequired,\n  onChangeYear: PropTypes.func.isRequired,\n  onChangeMonth: PropTypes.func.isRequired\n};\nMonthYearPicker.defaultProps = {\n  caption: 'Select month and year'\n};\nexport default MonthYearPicker;","map":null,"metadata":{},"sourceType":"module"}