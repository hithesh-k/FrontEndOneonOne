{"ast":null,"code":"import _objectSpread from \"/home/nineleaps/FrontEnd-One-on-One/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/nineleaps/FrontEnd-One-on-One/src/Pages/Managerpage3.js\";\nimport React from 'react';\nimport { Form, TextArea, Icon, Label, Button } from 'semantic-ui-react';\nimport Header from \"../Components/Header\";\nimport Footer from \"../Components/Footer\";\nimport ManagerNav from \"../Managerpg1/ManagerNav\";\nimport \"../Managerpg1/Managermain.css\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport apiconstants from '../employee/config';\nimport ManagerFooter from '../Managerpg1/ManagerFooter';\nvar bgColors = {\n  \"Green\": \"#8CC152\",\n  \"Yellow\": \"#d3d3d3\"\n};\nexport default class Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handelAnswerchange1 = event => {\n      this.setState({\n        a1: event.target.value\n      });\n    };\n\n    this.handelAnswerchange2 = event => {\n      this.setState({\n        a2: event.target.value\n      });\n    };\n\n    this.handelAnswerchange3 = event => {\n      this.setState({\n        a3: event.target.value\n      });\n    };\n\n    this.handelAnswerchange4 = event => {\n      this.setState({\n        a4: event.target.value\n      });\n    };\n\n    this.handelAnswerchange5 = event => {\n      this.setState({\n        a5: event.target.value\n      });\n    };\n\n    this.handleQuesChange = i => evt => {\n      const newques = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        console.log('row', row);\n        return _objectSpread({}, row, {\n          question: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newques\n      });\n    };\n\n    this.handleAnsChange = i => evt => {\n      const newanswer = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        return _objectSpread({}, row, {\n          answer: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newanswer\n      });\n    };\n\n    this.handleRemarkChange = i => evt => {\n      const newr = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        return _objectSpread({}, row, {\n          remark: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newr\n      });\n    };\n\n    this.setRedirect = event => {\n      event.preventDefault();\n      console.log(this.state);\n      let id = this.props.match.params.id;\n      let month = this.props.match.params.month;\n\n      if (this.validate() == true) {\n        const response = axios({\n          method: 'PATCH',\n          // url:'http://192.168.1.245:8095/qanda_static',\n          url: apiconstants.URL + \"qanda_static/\".concat(id, \"/\").concat(month),\n          data: this.state\n        }); // this.setState({\n        //     redirect: true\n        // })\n      }\n\n      for (let i = 0; i < this.state.dynamic.length; i++) {\n        if (this.state.dynamic[i].question == '' && this.state.dynamic[i].answer == '' && this.state.dynamic[i].remark == '') {\n          this.setState({\n            nullValue: false\n          });\n          this.setState({\n            redirect: true\n          });\n        } else if (this.state.dynamic[i].question == '' || this.state.dynamic[i].answer == '') {\n          this.setState({\n            nullValue: true\n          });\n          break;\n        }\n\n        if (this.state.nullValue == true) {\n          alert(\"Fields can't be empty\");\n        } else {\n          let id = this.props.match.params.id;\n          let month = this.props.match.params.month;\n          console.log(this.state.dynamic, 'state');\n          fetch(apiconstants.URL + \"qanda_dynamic/\".concat(id, \"/\").concat(month), {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.dynamic)\n          }).then(res => res).then(res => {\n            console.log(res.status);\n          }); // this.setState({\n          //   redirect: true\n          // })\n          //    if (this.state.redirect) {\n          //     return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n          //   }\n        }\n      }\n\n      ;\n\n      handleAdd = () => {\n        this.setState({\n          dynamic: this.state.dynamic.concat({\n            id: this.props.match.params.id,\n            question: \"\",\n            answer: \"\",\n            remark: \"\",\n            month: this.props.match.params.month\n          })\n        });\n      };\n    };\n\n    this.time = async () => {\n      console.log(\"state is:\" + JSON.stringify(this.state));\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n      const response = await axios({\n        method: 'get',\n        url: apiconstants.URL + \"/employeetimestamp/\".concat(id, \"/\").concat(month) // data: this.state\n\n      });\n      console.log(month);\n      return await response.data.time;\n    };\n\n    this.setRedirect1 = event => {\n      event.preventDefault();\n      console.log(this.state);\n      this.setState({\n        redirect1: true\n      });\n    };\n\n    this.state = {\n      q1: ' How is everything going today? Tell me about this last week?',\n      a1: '',\n      q2: ' What has gone well/not so well for you in this month?',\n      a2: '',\n      q3: ' What challenges have you faced?',\n      a3: '',\n      q4: ' How are you/your team progressing towards established goals?',\n      a4: '',\n      q5: ' What are you committing to between now and the next time we meet?',\n      a5: '',\n      disabled: false,\n      dynamic: [],\n      disabled: false,\n      nullValue: false\n    };\n  }\n\n  componentWillMount() {\n    var id = this.props.match.params.id;\n    var month = this.props.match.params.month;\n    console.log(id);\n    const response = axios({\n      method: 'post',\n      // url: 'http://192.168.1.245:8095/updatemonthvalue',\n      url: apiconstants.URL + \"updatemonthvalue/\".concat(id, \"/\").concat(month),\n      data: this.state\n    }).then(response => {\n      console.log(JSON.stringify(response.data + \"  first\"));\n\n      if (response.data.length != 0) {\n        console.log(JSON.stringify(response.data.answer));\n        this.setState({\n          a1: response.data[0].answer\n        });\n        this.setState({\n          a2: response.data[1].answer\n        });\n        this.setState({\n          a3: response.data[2].answer\n        });\n        this.setState({\n          a4: response.data[3].answer\n        });\n        this.setState({\n          a5: response.data[4].answer\n        });\n      } else {\n        console.log(\"second\", response);\n        this.setState({\n          a1: ''\n        });\n        this.setState({\n          a2: ''\n        });\n        this.setState({\n          a3: ''\n        });\n        this.setState({\n          a4: ''\n        });\n        this.setState({\n          a5: ''\n        });\n      }\n    });\n\n    if (response.data.length != 0) {\n      const da = [];\n      console.log(JSON.stringify(response.data));\n      response.data.map(datas => {\n        if (datas.type === 'd') {\n          da.push(datas);\n        }\n      });\n      this.setState({\n        dynamic: da\n      });\n    } else {\n      this.setState({\n        dynamic: this.state.dynamic.concat({\n          id: this.props.match.params.id,\n          question: \"\",\n          answer: \"\",\n          remark: \"\",\n          month: this.props.match.params.month\n        })\n      });\n    }\n  }\n\n  async componentDidMount() {\n    console.log(\"Component Did mount started\");\n    let val = await this.time();\n    console.log(\"value is \" + val);\n\n    if (val === 1) {\n      console.log(\"it entered the if \" + val);\n      await setTimeout(() => {\n        this.setState({\n          disabled: true\n        });\n      });\n    }\n  }\n\n  validate() {\n    const q1 = this.state.q1;\n    const a1 = this.state.a1;\n    const q2 = this.state.q2;\n    const a2 = this.state.a2;\n    const q3 = this.state.q3;\n    const a3 = this.state.a3;\n    const q4 = this.state.q4;\n    const a4 = this.state.a4;\n    const q5 = this.state.q5;\n    const a5 = this.state.a5;\n    let formIsValid = true;\n\n    if (q1 == '' || a1 == '' || q2 == '' || a2 == '' || q3 == '' || a3 == '' || q4 == '' || a4 == '' || q5 == '' || a5 == '') {\n      alert('Please fill the field');\n      formIsValid = false;\n    } else return formIsValid;\n  }\n\n  render() {\n    {\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/dynamic-form\" + \"/\" + this.props.match.params.mid + \"/\" + this.props.match.params.id + \"/\" + this.props.match.params.month + \"/\" + this.props.match.params.emp + \"/\" + this.props.match.params.pro,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        });\n      }\n    }\n    {\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n\n      if (this.state.redirect1) {\n        return React.createElement(Redirect, {\n          to: \"/month\" + \"/\" + this.props.match.params.mid + \"/\" + this.props.match.params.id + \"/\" + this.props.match.params.emp + \"/\" + this.props.match.params.pro,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        });\n      }\n    }\n    var mid = this.props.match.params.mid;\n    return React.createElement(\"div\", {\n      className: \"manbg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(Header, {\n      mid: mid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }), React.createElement(Label, {\n      size: \"large\",\n      style: {\n        color: \"black\",\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), this.props.match.params.pro), React.createElement(\"h1\", {\n      style: {\n        color: \"#303030\",\n        paddingLeft: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Employee Feedback-1 : \", React.createElement(\"span\", {\n      style: {\n        color: \"darkblue\",\n        fontWeight: \"bolder\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, this.props.match.params.emp), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"formalign\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.q1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        backgroundColor: bgColors.Yellow\n      },\n      placeholder: \"Answers\",\n      value: this.state.a1,\n      disabled: this.state.disabled,\n      onChange: this.handelAnswerchange1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    })), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.q2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        backgroundColor: bgColors.Yellow\n      },\n      placeholder: \"Answers\",\n      value: this.state.a2,\n      disabled: this.state.disabled,\n      onChange: this.handelAnswerchange2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    })), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.q3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        backgroundColor: bgColors.Yellow\n      },\n      placeholder: \"Answers\",\n      value: this.state.a3,\n      disabled: this.state.disabled,\n      onChange: this.handelAnswerchange3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    })), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.q4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        backgroundColor: bgColors.Yellow\n      },\n      placeholder: \"Answers\",\n      disabled: this.state.disabled,\n      value: this.state.a4,\n      onChange: this.handelAnswerchange4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    })), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.q5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        backgroundColor: bgColors.Yellow\n      },\n      placeholder: \"Answers\",\n      value: this.state.a5,\n      disabled: this.state.disabled,\n      onChange: this.handelAnswerchange5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.setRedirect1,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui blue button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"arrow circle left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }), \"Go Back\"), React.createElement(\"button\", {\n      onClick: this.setRedirect,\n      style: {\n        \"width\": \"200px\",\n        float: \"right\"\n      },\n      className: \"ui positive button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"Save & Next \", React.createElement(Icon, {\n      name: \"arrow circle right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      style: {\n        color: \" #303030\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"Employee Feedback-2 :\", React.createElement(\"span\", {\n      style: {\n        color: \"darkblue\",\n        fontWeight: \"bolder\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, this.props.match.params.emp), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, this.state.dynamic.map((row, i) => React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"10%\"\n      },\n      className: \"form1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      style: {\n        color: \"black\",\n        height: \"60px\"\n      },\n      placeholder: \"Enter your question\",\n      value: row.question,\n      disabled: this.state.disabled,\n      onChange: this.handleQuesChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, row.question), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        color: \"black\"\n      },\n      placeholder: \"Enter answer here\",\n      value: row.answer,\n      disabled: this.state.disabled,\n      style: {\n        backgroundColor: bgColors.Yellow\n      },\n      onChange: this.handleAnsChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }, row.answer), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        color: \"black\",\n        height: \"60px\"\n      },\n      placeholder: \"Remarks. If any?\",\n      style: {\n        backgroundColor: bgColors.Green\n      },\n      value: row.remark,\n      disabled: this.state.disabled,\n      onChange: this.handleRemarkChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, row.remark))), React.createElement(\"button\", {\n      onClick: this.setRedirect1,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui blue button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"arrow circle left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }), \"Go Back\"), React.createElement(Button, {\n      type: \"button\",\n      onClick: this.handleAdd,\n      className: \"ui blue button\",\n      style: {\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, \" Add more questions \"), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui green button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, \"   Save \", React.createElement(Icon, {\n      name: \"arrow circle right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }));\n  }\n\n}\n{}\n/* dynamic page */\n// class Managermain4 extends Component {\n//     constructor() {\n//       super();\n//       this.state = {\n//     };\n//     }\n//     componentWillMount() {\n//       let id = this.props.match.params.id\n//       let month = this.props.match.params.month\n//       const response = axios({\n//         method: 'post',\n//         url: apiconstants.URL + `updatemonthvalue/${id}/${month}`,\n//       })\n//         .then(response => {\n//           console.log(response)\n//           if (response.data.length != 0) {\n//             const da = [];\n//             console.log(JSON.stringify(response.data))\n//             response.data.map((datas) => {\n//               if (datas.type === 'd') {\n//                 da.push(datas);\n//               }\n//             })\n//             this.setState({ dynamic: da })\n//           }\n//           else {\n//             this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n//           }\n//         })\n//     }\n//     async componentDidMount() {\n//       console.log(\"Component Did mount started\")\n//       let val = await this.time();\n//       console.log(\"value is \" + val)\n//       if (val === 1) {\n//         console.log(\"it entered the if \" + val)\n//         await setTimeout(() => { this.setState({ disabled: true }) });\n//       }\n//     }\n//     time = async () => {\n//       console.log(\"state is:\" + JSON.stringify(this.state));\n//       var id = this.props.match.params.id\n//       var month = this.props.match.params.month\n//       const response = await axios({\n//         method: 'get',\n//         url: apiconstants.URL + `/employeetimestamp/${id}/${month}`,\n//       })\n//       console.log(response.data.time)\n//       return await response.data.time;\n//     }\n//     handleQuesChange = i => evt => {\n//       const newques = this.state.dynamic.map((row, j) => {\n//         if (i !== j) return row;\n//         console.log('row', row)\n//         return { ...row, question: evt.target.value };\n//       });\n//       this.setState({ dynamic: newques });\n//     };\n//     handleAnsChange = i => evt => {\n//       const newanswer = this.state.dynamic.map((row, j) => {\n//         if (i !== j) return row;\n//         return { ...row, answer: evt.target.value };\n//       });\n//       this.setState({ dynamic: newanswer });\n//     };\n//     handleRemarkChange = i => evt => {\n//       const newr = this.state.dynamic.map((row, j) => {\n//         if (i !== j) return row;\n//         return { ...row, remark: evt.target.value };\n//       });\n//       this.setState({ dynamic: newr });\n//     };\n//     handleSubmit = async (e) => {\n//       e.preventDefault();\n//       // this.setState({\n//       //   redirect: true\n//       // })\n//       console.log(JSON.stringify(this.state.dynamic));\n//       for(let i=0;i<this.state.dynamic.length;i++){\n//         if((this.state.dynamic[i].question=='' && this.state.dynamic[i].answer=='' && this.state.dynamic[i].remark==''))\n//         {\n//           await this.setState({nullValue:false})\n//           this.setState({\n//               redirect: true\n//             })\n//         }\n//         else if((this.state.dynamic[i].question==''|| this.state.dynamic[i].answer==''  ))\n//         {\n//           await this.setState({nullValue:true})\n//           break;\n//         }\n//       if(this.state.nullValue==true){\n//         alert(\"Fields can't be empty\")\n//       }\n//       else{\n//         let id = this.props.match.params.id\n//       let month = this.props.match.params.month\n//       console.log(this.state.dynamic, 'state');\n//       fetch(apiconstants.URL + `qanda_dynamic/${id}/${month}`, {\n//         method: 'PATCH',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(this.state.dynamic)\n//       }).then(res=> res)\n//       .then(res => {\n//         console.log(res.status)\n//         })\n//         this.setState({\n//           redirect: true\n//         })\n//            if (this.state.redirect) {\n//             return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n//           }\n//       }\n//     };\n//     }\n//     handleAdd = () => {\n//       this.setState({\n//         dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month })\n//       });\n//     };\n//     setRedirect1 = (event) => {\n//       event.preventDefault();\n//       console.log(this.state)\n//       this.setState({\n//         redirect1: true\n//       })\n//     };\n//     render() {\n//       {\n//         if (this.state.redirect) {\n//           return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n//         }\n//       }\n//       {\n//         if (this.state.redirect1) {\n//           return <Redirect to={\"/static-form\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n//         }\n//       }\n//       var mid = this.props.match.params.mid;\n//       return (\n//         <div className=\"manbg\">\n//           <Managerheader1 mid={mid} />\n//           <Label size='large' style={{ color: \"black\", width: \"auto\" }} ><Icon name='user' />\n//             {this.props.match.params.pro}\n//           </Label >\n//           <br />\n//           <br />\n//           <br />\n//           <h1 style={{ color: \" #303030\" }}>Employee Feedback-2 :<span style={{color:\"darkblue\",fontWeight:\"bolder\"}}>{this.props.match.params.emp}</span> </h1>\n//           <br />\n//                <Form >\n//             {this.state.dynamic.map((row, i) => (\n//               <div style={{ paddingLeft: \"10%\" }} className=\"form1\">\n//                 <TextArea style={{ color: \"black\", height: \"60px\" }}\n//                   placeholder=\"Enter your question\"\n//                   value={row.question}\n//                   disabled={this.state.disabled}\n//                   onChange={this.handleQuesChange(i)}\n//                required >{row.question}</TextArea>\n//                 <br />\n//                 <TextArea style={{ color: \"black\" }}\n//                   placeholder='Enter answer here'\n//                   value={row.answer}\n//                   disabled={this.state.disabled}\n//                   style={{ backgroundColor: bgColors.Yellow }}\n//                   onChange={this.handleAnsChange(i)}\n//                   required >{row.answer}</TextArea>\n//                 <br />\n//                 <TextArea style={{ color: \"black\", height: \"60px\" }}\n//                   placeholder='Remarks. If any?'\n//                   style={{ backgroundColor: bgColors.Green }}\n//                   value={row.remark}\n//                   disabled={this.state.disabled}\n//                   onChange={this.handleRemarkChange(i)}\n//                   required  >{row.remark}</TextArea>\n//               </div>\n//             ))}\n//             <br />\n//             <br />\n//             <br />\n//             <button onClick={this.setRedirect1}\n//               style={{ width: \"auto\", }}\n//               className=\"ui blue button\"> <Icon name=\"arrow circle left\" />Go Back</button>\n//             <Button\n//               type=\"button\"\n//               onClick={this.handleAdd}\n//               className=\"ui blue button\"\n//               style={{ width: \"auto\" }} > Add more questions </Button>\n//             <Button onClick={this.handleSubmit} style={{ width: \"auto\" }} className=\"ui green button\" >   Save <Icon name=\"arrow circle right\" /></Button>\n//           </Form>\n//           <br /><br /><br /><br /><br /><br /><br />\n//           <ManagerFooter2 />\n//         </div>\n//       );\n//     }\n//   }\n//   export default Managermain4;","map":{"version":3,"sources":["/home/nineleaps/FrontEnd-One-on-One/src/Pages/Managerpage3.js"],"names":["React","Form","TextArea","Icon","Label","Button","Header","Footer","ManagerNav","Redirect","axios","apiconstants","ManagerFooter","bgColors","Test","Component","constructor","props","handelAnswerchange1","event","setState","a1","target","value","handelAnswerchange2","a2","handelAnswerchange3","a3","handelAnswerchange4","a4","handelAnswerchange5","a5","handleQuesChange","i","evt","newques","state","dynamic","map","row","j","console","log","question","handleAnsChange","newanswer","answer","handleRemarkChange","newr","remark","setRedirect","preventDefault","id","match","params","month","validate","response","method","url","URL","data","length","nullValue","redirect","alert","fetch","headers","body","JSON","stringify","then","res","status","handleAdd","concat","time","setRedirect1","redirect1","q1","q2","q3","q4","q5","disabled","componentWillMount","da","datas","type","push","componentDidMount","val","setTimeout","formIsValid","render","mid","emp","pro","color","width","paddingLeft","fontWeight","backgroundColor","Yellow","float","height","Green","handleSubmit"],"mappings":"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":["import React from 'react'\nimport { Form, TextArea,Icon ,Label,Button} from 'semantic-ui-react'\nimport Header from \"../Components/Header\";\nimport Footer from\"../Components/Footer\";\nimport ManagerNav from \"../Managerpg1/ManagerNav\"\nimport \"../Managerpg1/Managermain.css\"\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\"\nimport apiconstants from '../employee/config';\n\nimport ManagerFooter from '../Managerpg1/ManagerFooter'\n\nvar bgColors = {\n    \"Green\": \"#8CC152\",\n    \"Yellow\": \"#d3d3d3\",\n};\n\nexport default class Test extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            q1: ' How is everything going today? Tell me about this last week?',\n            a1: '',\n            q2: ' What has gone well/not so well for you in this month?',\n            a2: '',\n            q3: ' What challenges have you faced?',\n            a3: '',\n            q4: ' How are you/your team progressing towards established goals?',\n            a4: '',\n            q5: ' What are you committing to between now and the next time we meet?',\n            a5: '',\n            disabled: false,\n            dynamic: [],\n            disabled: false,\n            nullValue: false\n\n        }\n    }\n\n\n    componentWillMount() {\n        var id = this.props.match.params.id\n        var month = this.props.match.params.month\n\n        console.log(id)\n        const response = axios({\n            method: 'post',\n            // url: 'http://192.168.1.245:8095/updatemonthvalue',\n            url: apiconstants.URL + `updatemonthvalue/${id}/${month}`,\n            data: this.state\n        })\n            .then(response => {\n                console.log(JSON.stringify(response.data + \"  first\"))\n                if (response.data.length != 0) {\n                    console.log(JSON.stringify(response.data.answer))\n                    this.setState({ a1: response.data[0].answer });\n                    this.setState({ a2: response.data[1].answer });\n                    this.setState({ a3: response.data[2].answer });\n                    this.setState({ a4: response.data[3].answer });\n                    this.setState({ a5: response.data[4].answer });\n                }\n                else {\n                    console.log(\"second\", response)\n                    this.setState({ a1: '' });\n                    this.setState({ a2: '' });\n                    this.setState({ a3: '' });\n                    this.setState({ a4: '' });\n                    this.setState({ a5: '' });\n                }\n            })\n\n            if (response.data.length != 0) {\n                const da = [];\n                console.log(JSON.stringify(response.data))\n                response.data.map((datas) => {\n                  if (datas.type === 'd') {\n                    da.push(datas);\n                  }\n                })\n                this.setState({ dynamic: da })\n              }\n      \n              else {\n                this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n      \n              }\n\n    }\n\n\n    handelAnswerchange1 = (event) => {\n\n        this.setState({\n            a1: event.target.value\n\n        })\n    };\n\n\n    handelAnswerchange2 = (event) => {\n        this.setState({\n            a2: event.target.value\n        })\n    };\n\n    handelAnswerchange3 = (event) => {\n        this.setState({\n            a3: event.target.value\n        })\n    };\n\n    handelAnswerchange4 = (event) => {\n        this.setState({\n            a4: event.target.value\n        })\n    };\n\n    handelAnswerchange5 = (event) => {\n        this.setState({\n            a5: event.target.value\n        })\n    };\n\n\n    handleQuesChange = i => evt => {\n        const newques = this.state.dynamic.map((row, j) => {\n          if (i !== j) return row;\n          console.log('row', row)\n          return { ...row, question: evt.target.value };\n        });\n    \n        this.setState({ dynamic: newques });\n      };\n      handleAnsChange = i => evt => {\n        const newanswer = this.state.dynamic.map((row, j) => {\n          if (i !== j) return row;\n          return { ...row, answer: evt.target.value };\n        });\n    \n        this.setState({ dynamic: newanswer });\n      };\n      handleRemarkChange = i => evt => {\n        const newr = this.state.dynamic.map((row, j) => {\n          if (i !== j) return row;\n          return { ...row, remark: evt.target.value };\n        });\n    \n        this.setState({ dynamic: newr });\n      };\n    \n\n\n    setRedirect = (event) => {\n        event.preventDefault();\n        console.log(this.state)\n        let id = this.props.match.params.id\n        let month = this.props.match.params.month\n\n        if (this.validate() == true) {\n            const response = axios({\n                method: 'PATCH',\n                // url:'http://192.168.1.245:8095/qanda_static',\n                url: apiconstants.URL + `qanda_static/${id}/${month}`,\n                data: this.state\n\n              \n            });\n            // this.setState({\n            //     redirect: true\n            // })\n        }\n\n        for(let i=0;i<this.state.dynamic.length;i++){\n            if((this.state.dynamic[i].question=='' && this.state.dynamic[i].answer=='' && this.state.dynamic[i].remark==''))\n            {\n               this.setState({nullValue:false})\n              this.setState({\n                  redirect: true\n                })\n            \n            }\n            else if((this.state.dynamic[i].question==''|| this.state.dynamic[i].answer==''  ))\n            {\n             this.setState({nullValue:true})\n              break;\n            }\n          \n      \n          if(this.state.nullValue==true){\n            alert(\"Fields can't be empty\")\n            \n          }\n          else{\n            let id = this.props.match.params.id\n          let month = this.props.match.params.month\n          console.log(this.state.dynamic, 'state');\n          fetch(apiconstants.URL + `qanda_dynamic/${id}/${month}`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.dynamic)\n      \n          }).then(res=> res)\n          .then(res => {\n            console.log(res.status)\n            \n            })\n            // this.setState({\n            //   redirect: true\n            // })\n      \n            //    if (this.state.redirect) {\n            //     return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n        \n            //   }\n         \n          }\n          \n        };\n\n        handleAdd = () => {\n            this.setState({\n              dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month })\n            });\n          };\n        \n\n       \n    };\n\n    async componentDidMount() {\n        console.log(\"Component Did mount started\")\n        let val=await this.time();\n        console.log(\"value is \"+val)\n        if(val===1){\n            console.log(\"it entered the if \"+val)\n            await setTimeout(()=>{this.setState({disabled:true})},);\n        }\n        \n    }\n\n    time = async () => {\n        console.log(\"state is:\"+JSON.stringify(this.state));\n\n        var id = this.props.match.params.id\n        var month = this.props.match.params.month\n\n        const response =await axios({\n            \n            method: 'get',\n            url: apiconstants.URL + `/employeetimestamp/${id}/${month}`,\n            // data: this.state\n        })\n            console.log(month)\n            return await response.data.time;\n    }\n\n\n    setRedirect1 = (event) => {\n        event.preventDefault();\n       console.log(this.state)\n        this.setState({\n            redirect1: true\n        })\n        \n    };\n\n\n     \n  \n    \n    validate() {\n        const { q1 } = this.state;\n        const { a1 } = this.state;\n        const { q2 } = this.state;\n        const { a2 } = this.state;\n        const { q3 } = this.state;\n        const { a3 } = this.state;\n        const { q4 } = this.state;\n        const { a4 } = this.state;\n        const { q5 } = this.state;\n        const { a5 } = this.state;\n\n        let formIsValid = true;\n        if (q1 == '' || a1 == '' || q2 == '' || a2 == '' || q3 == '' || a3 == '' || q4 == '' || a4 == '' || q5 == '' || a5 == '') {\n            alert('Please fill the field');\n            formIsValid = false;\n        }\n        else\n            return formIsValid;\n    }\n\n    render() {\n        {\n            var id = this.props.match.params.id\n            var month = this.props.match.params.month\n            if (this.state.redirect) {\n                return <Redirect to={\"/dynamic-form\"+\"/\"+  (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month)+\"/\"+(this.props.match.params.emp) +\"/\"+(this.props.match.params.pro)} />;\n\n            }\n        }\n\n        {\n            var id = this.props.match.params.id\n            var month = this.props.match.params.month\n            if (this.state.redirect1) {\n                return <Redirect to={\"/month\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) +\n                 \"/\" + (this.props.match.params.emp)+\"/\"+ (this.props.match.params.pro)} />;\n\n            }\n        }\n        var mid = this.props.match.params.mid;\n        return (\n            <div className=\"manbg\">\n                <Header mid={mid} />\n                <Label size='large' style={{color:\"black\",width :\"auto\"}} ><Icon name='user' />\n       \n       {this.props.match.params.pro}\n       </Label> \n   \n\n               <h1 style={{color:\"#303030\",paddingLeft:\"40px\"}}>Employee Feedback-1 : <span style={{color:\"darkblue\",fontWeight:\"bolder\"}}>{this.props.match.params.emp}</span> </h1>\n                <br />\n                <br />\n<div className=\"formalign\">\n                <Form >\n                    <input value={this.state.q1} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        value={this.state.a1}\n                        disabled={this.state.disabled}\n                        onChange={this.handelAnswerchange1}\n\n                    />\n                </Form>\n\n\n                <Form>\n                    <input value={this.state.q2} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        value={this.state.a2}\n                        disabled={this.state.disabled}\n                        onChange={this.handelAnswerchange2}\n                    />\n                </Form>\n\n\n                <Form>\n                    <input value={this.state.q3} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        value={this.state.a3}\n                        disabled={this.state.disabled}\n                        onChange={this.handelAnswerchange3} />\n                </Form>\n\n\n                <Form>\n                    <input value={this.state.q4} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        disabled={this.state.disabled}\n                        value={this.state.a4}\n                        onChange={this.handelAnswerchange4} />\n                </Form>\n\n\n\n                <Form>\n                    <input value={this.state.q5} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        value={this.state.a5}\n                        disabled={this.state.disabled}\n                        onChange={this.handelAnswerchange5} />\n                </Form>\n                </div>\n                <br />\n                <br />\n                <br />\n                <br />\n\n                <button onClick={this.setRedirect1}\n                            style={{ width :\"auto\",}}\n                            className=\"ui blue button\"> <Icon name=\"arrow circle left\" />Go Back</button>\n                <button onClick={this.setRedirect}\n                    style={{ \"width\": \"200px\",float:\"right\" }}\n                    className=\"ui positive button\">Save & Next <Icon name=\"arrow circle right\" /> </button>\n                <br />\n                <br />\n                <br />\n                <br />\n\n\n\n\n\n<h1 style={{ color: \" #303030\" }}>Employee Feedback-2 :<span style={{color:\"darkblue\",fontWeight:\"bolder\"}}>{this.props.match.params.emp}</span> </h1>\n          <br />\n               <Form >\n            {this.state.dynamic.map((row, i) => (\n              <div style={{ paddingLeft: \"10%\" }} className=\"form1\">\n  \n                <TextArea style={{ color: \"black\", height: \"60px\" }}\n                  placeholder=\"Enter your question\"\n                  value={row.question}\n                  disabled={this.state.disabled}\n                  onChange={this.handleQuesChange(i)}\n               required >{row.question}</TextArea>\n                <br />\n  \n                <TextArea style={{ color: \"black\" }}\n                  placeholder='Enter answer here'\n                  value={row.answer}\n                  disabled={this.state.disabled}\n                  style={{ backgroundColor: bgColors.Yellow }}\n                  onChange={this.handleAnsChange(i)}\n                  required >{row.answer}</TextArea>\n                <br />\n  \n                <TextArea style={{ color: \"black\", height: \"60px\" }}\n                  placeholder='Remarks. If any?'\n                  style={{ backgroundColor: bgColors.Green }}\n                  value={row.remark}\n                  disabled={this.state.disabled}\n                  onChange={this.handleRemarkChange(i)}\n                  required  >{row.remark}</TextArea>\n              </div>\n            ))}\n          \n            <button onClick={this.setRedirect1}\n              style={{ width: \"auto\", }}\n              className=\"ui blue button\"> <Icon name=\"arrow circle left\" />Go Back</button>\n  \n            <Button\n              type=\"button\"\n              onClick={this.handleAdd}\n              className=\"ui blue button\"\n              style={{ width: \"auto\" }} > Add more questions </Button>\n  \n            <Button onClick={this.handleSubmit} style={{ width: \"auto\" }} className=\"ui green button\" >   Save <Icon name=\"arrow circle right\" /></Button>\n          </Form>\n       \n          <Footer/>\n        </div>\n\n        )\n    }\n\n}\n\n\n{/* dynamic page */}\n\n\n// class Managermain4 extends Component {\n//     constructor() {\n//       super();\n//       this.state = {\n      \n//     };\n//     }\n\n//     componentWillMount() {\n//       let id = this.props.match.params.id\n//       let month = this.props.match.params.month\n//       const response = axios({\n//         method: 'post',\n//         url: apiconstants.URL + `updatemonthvalue/${id}/${month}`,\n//       })\n//         .then(response => {\n//           console.log(response)\n  \n//           if (response.data.length != 0) {\n//             const da = [];\n//             console.log(JSON.stringify(response.data))\n//             response.data.map((datas) => {\n//               if (datas.type === 'd') {\n//                 da.push(datas);\n//               }\n//             })\n//             this.setState({ dynamic: da })\n//           }\n  \n//           else {\n//             this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n  \n//           }\n//         })\n  \n//     }\n//     async componentDidMount() {\n//       console.log(\"Component Did mount started\")\n//       let val = await this.time();\n//       console.log(\"value is \" + val)\n//       if (val === 1) {\n//         console.log(\"it entered the if \" + val)\n//         await setTimeout(() => { this.setState({ disabled: true }) });\n//       }\n  \n//     }\n//     time = async () => {\n//       console.log(\"state is:\" + JSON.stringify(this.state));\n  \n//       var id = this.props.match.params.id\n//       var month = this.props.match.params.month\n  \n//       const response = await axios({\n  \n//         method: 'get',\n//         url: apiconstants.URL + `/employeetimestamp/${id}/${month}`,\n//       })\n//       console.log(response.data.time)\n//       return await response.data.time;\n//     }\n  \n//     handleQuesChange = i => evt => {\n//       const newques = this.state.dynamic.map((row, j) => {\n//         if (i !== j) return row;\n//         console.log('row', row)\n//         return { ...row, question: evt.target.value };\n//       });\n  \n//       this.setState({ dynamic: newques });\n//     };\n//     handleAnsChange = i => evt => {\n//       const newanswer = this.state.dynamic.map((row, j) => {\n//         if (i !== j) return row;\n//         return { ...row, answer: evt.target.value };\n//       });\n  \n//       this.setState({ dynamic: newanswer });\n//     };\n//     handleRemarkChange = i => evt => {\n//       const newr = this.state.dynamic.map((row, j) => {\n//         if (i !== j) return row;\n//         return { ...row, remark: evt.target.value };\n//       });\n  \n//       this.setState({ dynamic: newr });\n//     };\n  \n//     handleSubmit = async (e) => {\n//       e.preventDefault();\n//       // this.setState({\n//       //   redirect: true\n//       // })\n//       console.log(JSON.stringify(this.state.dynamic));\n//       for(let i=0;i<this.state.dynamic.length;i++){\n//         if((this.state.dynamic[i].question=='' && this.state.dynamic[i].answer=='' && this.state.dynamic[i].remark==''))\n//         {\n//           await this.setState({nullValue:false})\n//           this.setState({\n//               redirect: true\n//             })\n        \n//         }\n//         else if((this.state.dynamic[i].question==''|| this.state.dynamic[i].answer==''  ))\n//         {\n//           await this.setState({nullValue:true})\n//           break;\n//         }\n      \n  \n//       if(this.state.nullValue==true){\n//         alert(\"Fields can't be empty\")\n        \n//       }\n//       else{\n//         let id = this.props.match.params.id\n//       let month = this.props.match.params.month\n//       console.log(this.state.dynamic, 'state');\n//       fetch(apiconstants.URL + `qanda_dynamic/${id}/${month}`, {\n//         method: 'PATCH',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(this.state.dynamic)\n  \n//       }).then(res=> res)\n//       .then(res => {\n//         console.log(res.status)\n        \n//         })\n//         this.setState({\n//           redirect: true\n//         })\n  \n//            if (this.state.redirect) {\n//             return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n    \n//           }\n     \n//       }\n      \n//     };\n//     }\n  \n//     handleAdd = () => {\n//       this.setState({\n//         dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month })\n//       });\n//     };\n  \n//     setRedirect1 = (event) => {\n//       event.preventDefault();\n//       console.log(this.state)\n//       this.setState({\n//         redirect1: true\n//       })\n//     };\n  \n//     render() {\n//       {\n//         if (this.state.redirect) {\n//           return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n  \n//         }\n//       }\n//       {\n//         if (this.state.redirect1) {\n//           return <Redirect to={\"/static-form\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n  \n//         }\n//       }\n//       var mid = this.props.match.params.mid;\n//       return (\n  \n//         <div className=\"manbg\">\n//           <Managerheader1 mid={mid} />\n//           <Label size='large' style={{ color: \"black\", width: \"auto\" }} ><Icon name='user' />\n  \n//             {this.props.match.params.pro}\n//           </Label >\n//           <br />\n//           <br />\n//           <br />\n  \n//           <h1 style={{ color: \" #303030\" }}>Employee Feedback-2 :<span style={{color:\"darkblue\",fontWeight:\"bolder\"}}>{this.props.match.params.emp}</span> </h1>\n//           <br />\n//                <Form >\n//             {this.state.dynamic.map((row, i) => (\n//               <div style={{ paddingLeft: \"10%\" }} className=\"form1\">\n  \n//                 <TextArea style={{ color: \"black\", height: \"60px\" }}\n//                   placeholder=\"Enter your question\"\n//                   value={row.question}\n//                   disabled={this.state.disabled}\n//                   onChange={this.handleQuesChange(i)}\n//                required >{row.question}</TextArea>\n//                 <br />\n  \n//                 <TextArea style={{ color: \"black\" }}\n//                   placeholder='Enter answer here'\n//                   value={row.answer}\n//                   disabled={this.state.disabled}\n//                   style={{ backgroundColor: bgColors.Yellow }}\n//                   onChange={this.handleAnsChange(i)}\n//                   required >{row.answer}</TextArea>\n//                 <br />\n  \n//                 <TextArea style={{ color: \"black\", height: \"60px\" }}\n//                   placeholder='Remarks. If any?'\n//                   style={{ backgroundColor: bgColors.Green }}\n//                   value={row.remark}\n//                   disabled={this.state.disabled}\n//                   onChange={this.handleRemarkChange(i)}\n//                   required  >{row.remark}</TextArea>\n//               </div>\n//             ))}\n//             <br />\n//             <br />\n//             <br />\n  \n//             <button onClick={this.setRedirect1}\n//               style={{ width: \"auto\", }}\n//               className=\"ui blue button\"> <Icon name=\"arrow circle left\" />Go Back</button>\n  \n//             <Button\n//               type=\"button\"\n//               onClick={this.handleAdd}\n//               className=\"ui blue button\"\n//               style={{ width: \"auto\" }} > Add more questions </Button>\n  \n//             <Button onClick={this.handleSubmit} style={{ width: \"auto\" }} className=\"ui green button\" >   Save <Icon name=\"arrow circle right\" /></Button>\n//           </Form>\n//           <br /><br /><br /><br /><br /><br /><br />\n//           <ManagerFooter2 />\n//         </div>\n//       );\n//     }\n//   }\n  \n//   export default Managermain4;  \n\n\n"]},"metadata":{},"sourceType":"module"}