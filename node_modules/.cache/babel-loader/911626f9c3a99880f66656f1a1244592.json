{"ast":null,"code":"// import axios from \"axios\";\n// import React from 'react';\n// import { Redirect } from \"react-router-dom\";\n// import { Button, Form, Icon, Label, TextArea, TabPane,Divider } from 'semantic-ui-react';\n// import Footer from \"../Components/Footer\";\n// import Header from \"../Components/Header\";\n// import apiconstants from '../employee/config';\n// import \"../Managerpg1/Managermain.css\";\n// import Tab from \"../Components/Tab\"\n// var bgColors = {\n//     \"Green\": \"#c4ffbb\",\n//     \"Yellow\": \"#d3d3d3\",\n// };\n// export default class Test extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             // question: ' How is everything going today? Tell me about this last week?',\n//             // answer: '',\n//             // question: ' What has gone well/not so well for you in this month?',\n//             // answer: '',\n//             // question: ' What challenges have you faced?',\n//             // answer: '',\n//             // question: ' How are you/your team progressing towards established goals?',\n//             // answer: '',\n//             // question: ' What are you committing to between now and the next time we meet?',\n//             // answer: '',\n//             disabled: false,\n//             dynamic: [],\n//             disabled: false,\n//             nullValue: false,\n//             locationPath:\"\"\n//         }\n//     }\n//     componentWillMount() {\n//       this.setState({locationPath:this.props.history.location.pathname})\n//         var id = this.props.match.params.id\n//         var month = this.props.match.params.month\n//         var year = \"2019\"\n//         console.log(id)\n//         const response = axios({\n//             method: 'post',\n//             // url: 'http://192.168.1.245:8095/updatemonthvalue',\n//             url: apiconstants.URL + `updatemonthvalue/${id}/${month}/${year}`,\n//             data: this.state\n//         })\n//             .then(response => {\n//                 console.log(JSON.stringify(response.data + \"  first\"))\n//                 if (response.data.length != 0) {\n//                     console.log(JSON.stringify(response.data.answer))\n//                     this.setState({ a1: response.data[0].answer });\n//                     // this.setState({ a2: response.data[1].answer });\n//                     // this.setState({ a3: response.data[2].answer });\n//                     // this.setState({ a4: response.data[3].answer });\n//                     // this.setState({ a5: response.data[4].answer });\n//                 }\n//                 else {\n//                     console.log(\"second\", response)\n//                     this.setState({ a1: '' });\n//                     this.setState({ a2: '' });\n//                     this.setState({ a3: '' });\n//                     this.setState({ a4: '' });\n//                     this.setState({ a5: '' });\n//                 }\n//             if (response.data.length != 0) {\n//                 const da = [];\n//                 console.log(JSON.stringify(response.data))\n//                 response.data.map((datas) => {\n//                   if (datas.type === 'd') {\n//                     da.push(datas);\n//                   }\n//                 })\n//                 this.setState({ dynamic: da })\n//               }\n//               else {\n//                 this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n//               }\n//             })\n//     }\n//     // handelAnswerchange1 = (event) => {\n//     //     this.setState({\n//     //         a1: event.target.value\n//     //     })\n//     // };\n//     // handelAnswerchange2 = (event) => {\n//     //     this.setState({\n//     //         a2: event.target.value\n//     //     })\n//     // };\n//     // handelAnswerchange3 = (event) => {\n//     //     this.setState({\n//     //         a3: event.target.value\n//     //     })\n//     // };\n//     // handelAnswerchange4 = (event) => {\n//     //     this.setState({\n//     //         a4: event.target.value\n//     //     })\n//     // };\n//     // handelAnswerchange5 = (event) => {\n//     //     this.setState({\n//     //         a5: event.target.value\n//     //     })\n//     // };\n//     handleQuesChange = i => evt => {\n//         const newques = this.state.dynamic.map((row, j) => {\n//           if (i !== j) return row;\n//           console.log('row', row)\n//           return { ...row, question: evt.target.value };\n//         });\n//         this.setState({ dynamic: newques });\n//       };\n//       handleAnsChange = i => evt => {\n//         const newanswer = this.state.dynamic.map((row, j) => {\n//           if (i !== j) return row;\n//           return { ...row, answer: evt.target.value };\n//         });\n//         this.setState({ dynamic: newanswer });\n//       };\n//       handleRemarkChange = i => evt => {\n//         const newr = this.state.dynamic.map((row, j) => {\n//           if (i !== j) return row;\n//           return { ...row, remark: evt.target.value };\n//         });\n//         this.setState({ dynamic: newr });\n//       };\n//          handleAdd = () => {\n//             this.setState({\n//               dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month })\n//             });\n//           };\n//     handleSubmit = (event) => {\n//         event.preventDefault();\n//         console.log(this.state)\n//         let id = this.props.match.params.id\n//         let month = this.props.match.params.month\n// let year=\"2019\"\n//         if (this.validate() == true) {\n//             const response = axios({\n//                 method: 'PATCH',\n//                 // url:'http://192.168.1.245:8095/qanda_static',\n//                 url: apiconstants.URL + `feedback/${id}/${month}/${year}`,\n//                 data: this.state\n//             });\n//             // this.setState({\n//             //     redirect: true\n//             // })\n//         }\n//         for(let i=0;i<this.state.dynamic.length;i++){\n//             if((this.state.dynamic[i].question=='' && this.state.dynamic[i].answer=='' && this.state.dynamic[i].remark==''))\n//             {\n//                this.setState({nullValue:false})\n//               this.setState({\n//                   redirect: true\n//                 })\n//             }\n//             else if((this.state.dynamic[i].question==''|| this.state.dynamic[i].answer==''  ))\n//             {\n//              this.setState({nullValue:true})\n//               break;\n//             }\n//           if(this.state.nullValue==true){\n//             alert(\"Fields can't be empty\")\n//           }\n//           else{\n//             let id = this.props.match.params.id\n//           let month = this.props.match.params.month\n//           let year =\"2019\"\n//           console.log(this.state.dynamic, 'state');\n//           fetch(apiconstants.URL + `feedback/${id}/${month}/${year}`, {\n//             method: 'PATCH',\n//             headers: {\n//               'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify(this.state.dynamic)\n//           }).then(res=> res)\n//           .then(res => {\n//             console.log(res.status)\n//             })\n//             // this.setState({\n//             //   redirect: true\n//             // })\n//             //    if (this.state.redirect) {\n//             //     return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n//             //   }\n//           }\n//         };\n//     };\n//     async componentDidMount() {\n//         console.log(\"Component Did mount started\")\n//         let val=await this.time();\n//         console.log(\"value is \"+val)\n//         if(val===1){\n//             console.log(\"it entered the if \"+val)\n//             await setTimeout(()=>{this.setState({disabled:true})},);\n//         }\n//     }\n//     time = async () => {\n//         console.log(\"state is:\"+JSON.stringify(this.state));\n//         var id = this.props.match.params.id\n//         var month = this.props.match.params.month\n//         const response =await axios({\n//             method: 'get',\n//             url: apiconstants.URL + `/employeetimestamp/${id}/${month}`,\n//             // data: this.state\n//         })\n//             console.log(month)\n//             return await response.data.time;\n//     }\n//     setRedirect1 = (event) => {\n//         event.preventDefault();\n//        console.log(this.state)\n//         this.setState({\n//             redirect1: true\n//         })\n//     };\n//     validate() {\n//         const { q1 } = this.state;\n//         const { a1 } = this.state;\n//         const { q2 } = this.state;\n//         const { a2 } = this.state;\n//         const { q3 } = this.state;\n//         const { a3 } = this.state;\n//         const { q4 } = this.state;\n//         const { a4 } = this.state;\n//         const { q5 } = this.state;\n//         const { a5 } = this.state;\n//         let formIsValid = true;\n//         if (q1 == '' || a1 == '' || q2 == '' || a2 == '' || q3 == '' || a3 == '' || q4 == '' || a4 == '' || q5 == '' || a5 == '') {\n//             alert('Please fill the field');\n//             formIsValid = false;\n//         }\n//         else\n//             return formIsValid;\n//     }\n//     render() {\n//         // const {q1}=' How is everything going today? Tell me about this last week?',\n//         // var {q2}=' What has gone well/not so well for you in this month?',\n//         // var {q3}=' What challenges have you faced?',\n//         // var {q4}=' How are you/your team progressing towards established goals?',\n//         // var {q5}= ' What are you committing to between now and the next time we meet?',\n//         const pathURL=this.state.locationPath;\n//         {\n//             var id = this.props.match.params.id\n//             var month = this.props.match.params.month\n//             if (this.state.redirect) {\n//                 return <Redirect to={\"/dynamic-form\"+\"/\"+  (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month)+\"/\"+(this.props.match.params.emp) +\"/\"+(this.props.match.params.pro)} />;\n//             }\n//         }\n//         {\n//             var id = this.props.match.params.id\n//             var month = this.props.match.params.month\n//             if (this.state.redirect1) {\n//                 return <Redirect to={\"/month\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) +\n//                  \"/\" + (this.props.match.params.emp)+\"/\"+ (this.props.match.params.pro)} />;\n//             }\n//         }\n//         var mid = this.props.match.params.mid;\n//         return (\n//             <div className=\"manbg\">\n//                 <Header mid={mid} />\n//                <Tab mid={this.props.match.params.mid}  \n//                     id={this.props.match.params.id}  \n//                     month={this.props.match.params.month}  \n//                     emp={this.props.match.params.emp} \n//                     pro={this.props.match.params.pro}  \n//                     pathURL={pathURL}\n//                      />\n//                 <Label size='large' style={{color:\"black\",width :\"auto\"}} ><Icon name='user' />\n//        {this.props.match.params.pro}\n//        </Label> \n//                <h1 style={{color:\"#303030\",paddingLeft:\"40px\"}}>Employee Feedback-1 : <span style={{color:\"darkblue\",fontWeight:\"bolder\"}}>{this.props.match.params.emp}</span> </h1>\n//                 <br />\n//                 <br />\n//                 <br />\n//                 <br />\n//                 <br />\n//                 <br />\n//                                {/* <button onClick={this.setRedirect}\n//                     style={{ \"width\": \"200px\",float:\"right\" }}\n//                     className=\"ui positive button\">Save & Next <Icon name=\"arrow circle right\" /> </button> */}\n//                 <Form >      \n//             {this.state.dynamic.map((row, i) => (\n//               <div style={{ paddingLeft: \"10%\" }} className=\"form1\">  \n//                 <TextArea style={{ color: \"black\", height: \"60px\" }}\n//                   placeholder=\"Enter your question\"\n//                   value={row.question}\n//                   disabled={this.state.disabled}\n//                   onChange={this.handleQuesChange(i)}\n//                required >{row.question}</TextArea>\n//                 <br />\n//                 <TextArea style={{ color: \"black\" }}\n//                   placeholder='Enter answer here'\n//                   value={row.answer}\n//                   disabled={this.state.disabled}\n//                   style={{ backgroundColor: bgColors.Yellow }}\n//                   onChange={this.handleAnsChange(i)}\n//                   required >{row.answer}</TextArea>\n//                 <br />\n//                 <TextArea style={{ color: \"black\", height: \"60px\" }}\n//                   placeholder='Remarks. If any?'\n//                   style={{ backgroundColor: bgColors.Green }}\n//                   value={row.remark}\n//                   disabled={this.state.disabled}\n//                   onChange={this.handleRemarkChange(i)}\n//                   required  >{row.remark}</TextArea>\n//               </div>\n//             ))}\n//    <button onClick={this.setRedirect1}\n//                             style={{ width :\"auto\",}}\n//                             className=\"ui blue button\"> <Icon name=\"arrow circle left\" />Go Back</button>\n//             <Button\n//               type=\"button\"\n//               onClick={this.handleAdd}\n//               className=\"ui blue button\"\n//               style={{ width: \"auto\" }} > Add more questions </Button>\n//             <Button onClick={this.handleSubmit} style={{ width: \"auto\" }} className=\"ui green button\" >   Save <Icon name=\"arrow circle right\" /></Button>\n//           </Form> \n//           <Footer/>\n//         </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["/home/nineleaps/FrontEnd-One-on-One/src/Pages/Feedback.js"],"names":[],"mappingssourcesContent":["// import axios from \"axios\";\n// import React from 'react';\n// import { Redirect } from \"react-router-dom\";\n// import { Button, Form, Icon, Label, TextArea, TabPane,Divider } from 'semantic-ui-react';\n// import Footer from \"../Components/Footer\";\n// import Header from \"../Components/Header\";\n// import apiconstants from '../employee/config';\n// import \"../Managerpg1/Managermain.css\";\n// import Tab from \"../Components/Tab\"\n\n\n// var bgColors = {\n//     \"Green\": \"#c4ffbb\",\n//     \"Yellow\": \"#d3d3d3\",\n// };\n\n// export default class Test extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n\n//             // question: ' How is everything going today? Tell me about this last week?',\n//             // answer: '',\n//             // question: ' What has gone well/not so well for you in this month?',\n//             // answer: '',\n//             // question: ' What challenges have you faced?',\n//             // answer: '',\n//             // question: ' How are you/your team progressing towards established goals?',\n//             // answer: '',\n//             // question: ' What are you committing to between now and the next time we meet?',\n//             // answer: '',\n//             disabled: false,\n//             dynamic: [],\n//             disabled: false,\n//             nullValue: false,\n//             locationPath:\"\"\n//         }\n//     }\n\n\n//     componentWillMount() {\n//       this.setState({locationPath:this.props.history.location.pathname})\n//         var id = this.props.match.params.id\n//         var month = this.props.match.params.month\n//         var year = \"2019\"\n//         console.log(id)\n//         const response = axios({\n//             method: 'post',\n//             // url: 'http://192.168.1.245:8095/updatemonthvalue',\n//             url: apiconstants.URL + `updatemonthvalue/${id}/${month}/${year}`,\n//             data: this.state\n//         })\n//             .then(response => {\n//                 console.log(JSON.stringify(response.data + \"  first\"))\n//                 if (response.data.length != 0) {\n//                     console.log(JSON.stringify(response.data.answer))\n//                     this.setState({ a1: response.data[0].answer });\n//                     // this.setState({ a2: response.data[1].answer });\n//                     // this.setState({ a3: response.data[2].answer });\n//                     // this.setState({ a4: response.data[3].answer });\n//                     // this.setState({ a5: response.data[4].answer });\n//                 }\n//                 else {\n//                     console.log(\"second\", response)\n//                     this.setState({ a1: '' });\n//                     this.setState({ a2: '' });\n//                     this.setState({ a3: '' });\n//                     this.setState({ a4: '' });\n//                     this.setState({ a5: '' });\n//                 }\n          \n\n//             if (response.data.length != 0) {\n//                 const da = [];\n//                 console.log(JSON.stringify(response.data))\n//                 response.data.map((datas) => {\n//                   if (datas.type === 'd') {\n//                     da.push(datas);\n//                   }\n//                 })\n//                 this.setState({ dynamic: da })\n//               }\n      \n//               else {\n//                 this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n      \n//               }\n//             })\n\n//     }\n\n\n//     // handelAnswerchange1 = (event) => {\n\n//     //     this.setState({\n//     //         a1: event.target.value\n\n//     //     })\n//     // };\n\n\n//     // handelAnswerchange2 = (event) => {\n//     //     this.setState({\n//     //         a2: event.target.value\n//     //     })\n//     // };\n\n//     // handelAnswerchange3 = (event) => {\n//     //     this.setState({\n//     //         a3: event.target.value\n//     //     })\n//     // };\n\n//     // handelAnswerchange4 = (event) => {\n//     //     this.setState({\n//     //         a4: event.target.value\n//     //     })\n//     // };\n\n//     // handelAnswerchange5 = (event) => {\n//     //     this.setState({\n//     //         a5: event.target.value\n//     //     })\n//     // };\n\n\n//     handleQuesChange = i => evt => {\n//         const newques = this.state.dynamic.map((row, j) => {\n//           if (i !== j) return row;\n//           console.log('row', row)\n//           return { ...row, question: evt.target.value };\n//         });\n    \n//         this.setState({ dynamic: newques });\n//       };\n//       handleAnsChange = i => evt => {\n//         const newanswer = this.state.dynamic.map((row, j) => {\n//           if (i !== j) return row;\n//           return { ...row, answer: evt.target.value };\n//         });\n    \n//         this.setState({ dynamic: newanswer });\n//       };\n//       handleRemarkChange = i => evt => {\n//         const newr = this.state.dynamic.map((row, j) => {\n//           if (i !== j) return row;\n//           return { ...row, remark: evt.target.value };\n//         });\n    \n//         this.setState({ dynamic: newr });\n//       };\n\n//          handleAdd = () => {\n//             this.setState({\n//               dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month })\n              \n//             });\n//           };\n    \n//     handleSubmit = (event) => {\n//         event.preventDefault();\n//         console.log(this.state)\n//         let id = this.props.match.params.id\n//         let month = this.props.match.params.month\n// let year=\"2019\"\n//         if (this.validate() == true) {\n//             const response = axios({\n//                 method: 'PATCH',\n//                 // url:'http://192.168.1.245:8095/qanda_static',\n//                 url: apiconstants.URL + `feedback/${id}/${month}/${year}`,\n//                 data: this.state\n\n              \n//             });\n//             // this.setState({\n//             //     redirect: true\n//             // })\n//         }\n\n//         for(let i=0;i<this.state.dynamic.length;i++){\n//             if((this.state.dynamic[i].question=='' && this.state.dynamic[i].answer=='' && this.state.dynamic[i].remark==''))\n//             {\n//                this.setState({nullValue:false})\n//               this.setState({\n//                   redirect: true\n//                 })\n            \n//             }\n//             else if((this.state.dynamic[i].question==''|| this.state.dynamic[i].answer==''  ))\n//             {\n//              this.setState({nullValue:true})\n//               break;\n//             }\n          \n      \n//           if(this.state.nullValue==true){\n//             alert(\"Fields can't be empty\")\n//           }\n          \n//           else{\n//             let id = this.props.match.params.id\n//           let month = this.props.match.params.month\n//           let year =\"2019\"\n//           console.log(this.state.dynamic, 'state');\n//           fetch(apiconstants.URL + `feedback/${id}/${month}/${year}`, {\n//             method: 'PATCH',\n//             headers: {\n//               'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify(this.state.dynamic)\n      \n//           }).then(res=> res)\n//           .then(res => {\n//             console.log(res.status)\n            \n//             })\n//             // this.setState({\n//             //   redirect: true\n//             // })\n      \n//             //    if (this.state.redirect) {\n//             //     return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n        \n//             //   }\n         \n//           }\n          \n//         };\n\n     \n        \n\n       \n//     };\n\n//     async componentDidMount() {\n//         console.log(\"Component Did mount started\")\n//         let val=await this.time();\n//         console.log(\"value is \"+val)\n//         if(val===1){\n//             console.log(\"it entered the if \"+val)\n//             await setTimeout(()=>{this.setState({disabled:true})},);\n//         }\n        \n//     }\n\n//     time = async () => {\n//         console.log(\"state is:\"+JSON.stringify(this.state));\n\n//         var id = this.props.match.params.id\n//         var month = this.props.match.params.month\n\n//         const response =await axios({\n            \n//             method: 'get',\n//             url: apiconstants.URL + `/employeetimestamp/${id}/${month}`,\n//             // data: this.state\n//         })\n//             console.log(month)\n//             return await response.data.time;\n//     }\n\n\n//     setRedirect1 = (event) => {\n//         event.preventDefault();\n//        console.log(this.state)\n//         this.setState({\n//             redirect1: true\n//         })\n        \n//     };\n\n\n     \n  \n    \n//     validate() {\n//         const { q1 } = this.state;\n//         const { a1 } = this.state;\n//         const { q2 } = this.state;\n//         const { a2 } = this.state;\n//         const { q3 } = this.state;\n//         const { a3 } = this.state;\n//         const { q4 } = this.state;\n//         const { a4 } = this.state;\n//         const { q5 } = this.state;\n//         const { a5 } = this.state;\n\n//         let formIsValid = true;\n//         if (q1 == '' || a1 == '' || q2 == '' || a2 == '' || q3 == '' || a3 == '' || q4 == '' || a4 == '' || q5 == '' || a5 == '') {\n//             alert('Please fill the field');\n//             formIsValid = false;\n//         }\n//         else\n//             return formIsValid;\n//     }\n//     render() {\n//         // const {q1}=' How is everything going today? Tell me about this last week?',\n//         // var {q2}=' What has gone well/not so well for you in this month?',\n//         // var {q3}=' What challenges have you faced?',\n//         // var {q4}=' How are you/your team progressing towards established goals?',\n//         // var {q5}= ' What are you committing to between now and the next time we meet?',\n\n\n//         const pathURL=this.state.locationPath;\n\n\n       \n//         {\n//             var id = this.props.match.params.id\n//             var month = this.props.match.params.month\n//             if (this.state.redirect) {\n//                 return <Redirect to={\"/dynamic-form\"+\"/\"+  (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month)+\"/\"+(this.props.match.params.emp) +\"/\"+(this.props.match.params.pro)} />;\n\n//             }\n//         }\n\n//         {\n//             var id = this.props.match.params.id\n//             var month = this.props.match.params.month\n//             if (this.state.redirect1) {\n//                 return <Redirect to={\"/month\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) +\n//                  \"/\" + (this.props.match.params.emp)+\"/\"+ (this.props.match.params.pro)} />;\n\n//             }\n//         }\n//         var mid = this.props.match.params.mid;\n//         return (\n//             <div className=\"manbg\">\n//                 <Header mid={mid} />\n\n//                <Tab mid={this.props.match.params.mid}  \n//                     id={this.props.match.params.id}  \n//                     month={this.props.match.params.month}  \n//                     emp={this.props.match.params.emp} \n//                     pro={this.props.match.params.pro}  \n//                     pathURL={pathURL}\n//                      />\n\n//                 <Label size='large' style={{color:\"black\",width :\"auto\"}} ><Icon name='user' />\n       \n//        {this.props.match.params.pro}\n//        </Label> \n//                <h1 style={{color:\"#303030\",paddingLeft:\"40px\"}}>Employee Feedback-1 : <span style={{color:\"darkblue\",fontWeight:\"bolder\"}}>{this.props.match.params.emp}</span> </h1>\n//                 <br />\n//                 <br />\n\n//                 <br />\n//                 <br />\n//                 <br />\n//                 <br />\n\n//                                {/* <button onClick={this.setRedirect}\n//                     style={{ \"width\": \"200px\",float:\"right\" }}\n//                     className=\"ui positive button\">Save & Next <Icon name=\"arrow circle right\" /> </button> */}\n                \n\n\n//                 <Form >      \n//             {this.state.dynamic.map((row, i) => (\n//               <div style={{ paddingLeft: \"10%\" }} className=\"form1\">  \n//                 <TextArea style={{ color: \"black\", height: \"60px\" }}\n//                   placeholder=\"Enter your question\"\n//                   value={row.question}\n//                   disabled={this.state.disabled}\n//                   onChange={this.handleQuesChange(i)}\n//                required >{row.question}</TextArea>\n//                 <br />\n  \n//                 <TextArea style={{ color: \"black\" }}\n//                   placeholder='Enter answer here'\n//                   value={row.answer}\n//                   disabled={this.state.disabled}\n//                   style={{ backgroundColor: bgColors.Yellow }}\n//                   onChange={this.handleAnsChange(i)}\n//                   required >{row.answer}</TextArea>\n//                 <br />\n  \n//                 <TextArea style={{ color: \"black\", height: \"60px\" }}\n//                   placeholder='Remarks. If any?'\n//                   style={{ backgroundColor: bgColors.Green }}\n//                   value={row.remark}\n//                   disabled={this.state.disabled}\n//                   onChange={this.handleRemarkChange(i)}\n//                   required  >{row.remark}</TextArea>\n//               </div>\n//             ))}\n          \n           \n//    <button onClick={this.setRedirect1}\n//                             style={{ width :\"auto\",}}\n//                             className=\"ui blue button\"> <Icon name=\"arrow circle left\" />Go Back</button>\n\n//             <Button\n//               type=\"button\"\n//               onClick={this.handleAdd}\n//               className=\"ui blue button\"\n//               style={{ width: \"auto\" }} > Add more questions </Button>\n  \n//             <Button onClick={this.handleSubmit} style={{ width: \"auto\" }} className=\"ui green button\" >   Save <Icon name=\"arrow circle right\" /></Button>\n//           </Form> \n   \n       \n//           <Footer/>\n//         </div>\n\n//         )\n//     }\n\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}