{"ast":null,"code":"import _objectSpread from \"/home/nineleaps/FrontEnd-One-on-One/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/nineleaps/FrontEnd-One-on-One/src/Pages/Managerpage3.js\";\nimport axios from \"axios\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Icon, Label, TextArea } from 'semantic-ui-react';\nimport Footer from \"../Components/Footer\";\nimport Header from \"../Components/Header\";\nimport apiconstants from '../employee/config';\nimport \"../Managerpg1/Managermain.css\";\nvar bgColors = {\n  \"Green\": \"#8CC152\",\n  \"Yellow\": \"#d3d3d3\"\n};\nexport default class Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuesChange = i => evt => {\n      const newques = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        console.log('row', row);\n        return _objectSpread({}, row, {\n          question: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newques\n      });\n    };\n\n    this.handleAnsChange = i => evt => {\n      const newanswer = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        return _objectSpread({}, row, {\n          answer: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newanswer\n      });\n    };\n\n    this.handleRemarkChange = i => evt => {\n      const newr = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        return _objectSpread({}, row, {\n          remark: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newr\n      });\n    };\n\n    this.handleAdd = () => {\n      this.setState({//   dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month })\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state);\n      let id = this.props.match.params.id;\n      let month = this.props.match.params.month;\n      let year = \"2019\";\n\n      if (this.validate() == true) {\n        const response = axios({\n          method: 'PATCH',\n          // url:'http://192.168.1.245:8095/qanda_static',\n          url: apiconstants.URL + \"feedback/\".concat(id, \"/\").concat(month, \"/\").concat(year),\n          data: this.state\n        }); // this.setState({\n        //     redirect: true\n        // })\n      }\n\n      for (let i = 0; i < this.state.dynamic.length; i++) {\n        if (this.state.dynamic[i].question == '' && this.state.dynamic[i].answer == '' && this.state.dynamic[i].remark == '') {\n          this.setState({\n            nullValue: false\n          });\n          this.setState({\n            redirect: true\n          });\n        } else if (this.state.dynamic[i].question == '' || this.state.dynamic[i].answer == '') {\n          this.setState({\n            nullValue: true\n          });\n          break;\n        }\n\n        if (this.state.nullValue == true) {\n          alert(\"Fields can't be empty\");\n        } else {\n          let id = this.props.match.params.id;\n          let month = this.props.match.params.month;\n          let year = \"2019\";\n          console.log(this.state.dynamic, 'state');\n          fetch(apiconstants.URL + \"feedback/\".concat(id, \"/\").concat(month, \"/\").concat(year), {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.dynamic)\n          }).then(res => res).then(res => {\n            console.log(res.status);\n          }); // this.setState({\n          //   redirect: true\n          // })\n          //    if (this.state.redirect) {\n          //     return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n          //   }\n        }\n      }\n\n      ;\n    };\n\n    this.time = async () => {\n      console.log(\"state is:\" + JSON.stringify(this.state));\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n      const response = await axios({\n        method: 'get',\n        url: apiconstants.URL + \"/employeetimestamp/\".concat(id, \"/\").concat(month) // data: this.state\n\n      });\n      console.log(month);\n      return await response.data.time;\n    };\n\n    this.setRedirect1 = event => {\n      event.preventDefault();\n      console.log(this.state);\n      this.setState({\n        redirect1: true\n      });\n    };\n\n    this.state = {\n      // question: ' How is everything going today? Tell me about this last week?',\n      // answer: '',\n      // question: ' What has gone well/not so well for you in this month?',\n      // answer: '',\n      // question: ' What challenges have you faced?',\n      // answer: '',\n      // question: ' How are you/your team progressing towards established goals?',\n      // answer: '',\n      // question: ' What are you committing to between now and the next time we meet?',\n      // answer: '',\n      disabled: false,\n      dynamic: [],\n      disabled: false,\n      nullValue: false\n    };\n  }\n\n  componentWillMount() {\n    var id = this.props.match.params.id;\n    var month = this.props.match.params.month;\n    var year = \"2019\";\n    console.log(id);\n    const response = axios({\n      method: 'post',\n      // url: 'http://192.168.1.245:8095/updatemonthvalue',\n      url: apiconstants.URL + \"updatemonthvalue/\".concat(id, \"/\").concat(month, \"/\").concat(year),\n      data: this.state\n    }).then(response => {\n      console.log(JSON.stringify(response.data + \"  first\"));\n\n      if (response.data.length != 0) {\n        console.log(JSON.stringify(response.data.answer));\n        this.setState({\n          a1: response.data[0].answer\n        });\n        this.setState({\n          a2: response.data[1].answer\n        });\n        this.setState({\n          a3: response.data[2].answer\n        });\n        this.setState({\n          a4: response.data[3].answer\n        });\n        this.setState({\n          a5: response.data[4].answer\n        });\n      } else {\n        console.log(\"second\", response);\n        this.setState({\n          a1: ''\n        });\n        this.setState({\n          a2: ''\n        });\n        this.setState({\n          a3: ''\n        });\n        this.setState({\n          a4: ''\n        });\n        this.setState({\n          a5: ''\n        });\n      }\n\n      if (response.data.length != 0) {\n        const da = [];\n        console.log(JSON.stringify(response.data));\n        response.data.map(datas => {\n          if (datas.type === 'd') {\n            da.push(datas);\n          }\n        });\n        this.setState({\n          dynamic: da\n        });\n      } else {\n        this.setState({\n          dynamic: this.state.dynamic.concat({\n            id: this.props.match.params.id,\n            question: \"\",\n            answer: \"\",\n            remark: \"\",\n            month: this.props.match.params.month\n          })\n        });\n      }\n    });\n  } // handelAnswerchange1 = (event) => {\n  //     this.setState({\n  //         a1: event.target.value\n  //     })\n  // };\n  // handelAnswerchange2 = (event) => {\n  //     this.setState({\n  //         a2: event.target.value\n  //     })\n  // };\n  // handelAnswerchange3 = (event) => {\n  //     this.setState({\n  //         a3: event.target.value\n  //     })\n  // };\n  // handelAnswerchange4 = (event) => {\n  //     this.setState({\n  //         a4: event.target.value\n  //     })\n  // };\n  // handelAnswerchange5 = (event) => {\n  //     this.setState({\n  //         a5: event.target.value\n  //     })\n  // };\n\n\n  async componentDidMount() {\n    console.log(\"Component Did mount started\");\n    let val = await this.time();\n    console.log(\"value is \" + val);\n\n    if (val === 1) {\n      console.log(\"it entered the if \" + val);\n      await setTimeout(() => {\n        this.setState({\n          disabled: true\n        });\n      });\n    }\n  }\n\n  validate() {\n    const q1 = this.state.q1;\n    const a1 = this.state.a1;\n    const q2 = this.state.q2;\n    const a2 = this.state.a2;\n    const q3 = this.state.q3;\n    const a3 = this.state.a3;\n    const q4 = this.state.q4;\n    const a4 = this.state.a4;\n    const q5 = this.state.q5;\n    const a5 = this.state.a5;\n    let formIsValid = true;\n\n    if (q1 == '' || a1 == '' || q2 == '' || a2 == '' || q3 == '' || a3 == '' || q4 == '' || a4 == '' || q5 == '' || a5 == '') {\n      alert('Please fill the field');\n      formIsValid = false;\n    } else return formIsValid;\n  }\n\n  render() {\n    // const {q1}=' How is everything going today? Tell me about this last week?',\n    // var {q2}=' What has gone well/not so well for you in this month?',\n    // var {q3}=' What challenges have you faced?',\n    // var {q4}=' How are you/your team progressing towards established goals?',\n    // var {q5}= ' What are you committing to between now and the next time we meet?',\n    {\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/dynamic-form\" + \"/\" + this.props.match.params.mid + \"/\" + this.props.match.params.id + \"/\" + this.props.match.params.month + \"/\" + this.props.match.params.emp + \"/\" + this.props.match.params.pro,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        });\n      }\n    }\n    {\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n\n      if (this.state.redirect1) {\n        return React.createElement(Redirect, {\n          to: \"/month\" + \"/\" + this.props.match.params.mid + \"/\" + this.props.match.params.id + \"/\" + this.props.match.params.emp + \"/\" + this.props.match.params.pro,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        });\n      }\n    }\n    var mid = this.props.match.params.mid;\n    return React.createElement(\"div\", {\n      className: \"manbg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Header, {\n      mid: mid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), React.createElement(Label, {\n      size: \"large\",\n      style: {\n        color: \"black\",\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), this.props.match.params.pro), React.createElement(\"h1\", {\n      style: {\n        color: \"#303030\",\n        paddingLeft: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Employee Feedback-1 : \", React.createElement(\"span\", {\n      style: {\n        color: \"darkblue\",\n        fontWeight: \"bolder\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, this.props.match.params.emp), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.setRedirect1,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui blue button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"arrow circle left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }), \"Go Back\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, this.state.dynamic.map((row, i) => React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"10%\"\n      },\n      className: \"form1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      style: {\n        color: \"black\",\n        height: \"60px\"\n      },\n      placeholder: \"Enter your question\",\n      value: row.question,\n      disabled: this.state.disabled,\n      onChange: this.handleQuesChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, row.question), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        color: \"black\"\n      },\n      placeholder: \"Enter answer here\",\n      value: row.answer,\n      disabled: this.state.disabled,\n      style: {\n        backgroundColor: bgColors.Yellow\n      },\n      onChange: this.handleAnsChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477\n      },\n      __self: this\n    }, row.answer), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        color: \"black\",\n        height: \"60px\"\n      },\n      placeholder: \"Remarks. If any?\",\n      style: {\n        backgroundColor: bgColors.Green\n      },\n      value: row.remark,\n      disabled: this.state.disabled,\n      onChange: this.handleRemarkChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486\n      },\n      __self: this\n    }, row.remark))), React.createElement(Button, {\n      type: \"button\",\n      onClick: this.handleAdd,\n      className: \"ui blue button\",\n      style: {\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, \" Add more questions \"), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui green button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }, \"   Save \", React.createElement(Icon, {\n      name: \"arrow circle right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/nineleaps/FrontEnd-One-on-One/src/Pages/Managerpage3.js"],"names":["axios","React","Redirect","Button","Form","Icon","Label","TextArea","Footer","Header","apiconstants","bgColors","Test","Component","constructor","props","handleQuesChange","i","evt","newques","state","dynamic","map","row","j","console","log","question","target","value","setState","handleAnsChange","newanswer","answer","handleRemarkChange","newr","remark","handleAdd","handleSubmit","event","preventDefault","id","match","params","month","year","validate","response","method","url","URL","data","length","nullValue","redirect","alert","fetch","headers","body","JSON","stringify","then","res","status","time","setRedirect1","redirect1","disabled","componentWillMount","a1","a2","a3","a4","a5","da","datas","type","push","concat","componentDidMount","val","setTimeout","q1","q2","q3","q4","q5","formIsValid","render","mid","emp","pro","color","width","paddingLeft","fontWeight","height","backgroundColor","Yellow","Green"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Icon, Label, TextArea } from 'semantic-ui-react';\nimport Footer from \"../Components/Footer\";\nimport Header from \"../Components/Header\";\nimport apiconstants from '../employee/config';\nimport \"../Managerpg1/Managermain.css\";\n\n\nvar bgColors = {\n    \"Green\": \"#8CC152\",\n    \"Yellow\": \"#d3d3d3\",\n};\n\nexport default class Test extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            // question: ' How is everything going today? Tell me about this last week?',\n            // answer: '',\n            // question: ' What has gone well/not so well for you in this month?',\n            // answer: '',\n            // question: ' What challenges have you faced?',\n            // answer: '',\n            // question: ' How are you/your team progressing towards established goals?',\n            // answer: '',\n            // question: ' What are you committing to between now and the next time we meet?',\n            // answer: '',\n            disabled: false,\n            dynamic: [],\n            disabled: false,\n            nullValue: false\n\n        }\n    }\n\n\n    componentWillMount() {\n        var id = this.props.match.params.id\n        var month = this.props.match.params.month\n        var year = \"2019\"\n        console.log(id)\n        const response = axios({\n            method: 'post',\n            // url: 'http://192.168.1.245:8095/updatemonthvalue',\n            url: apiconstants.URL + `updatemonthvalue/${id}/${month}/${year}`,\n            data: this.state\n        })\n            .then(response => {\n                console.log(JSON.stringify(response.data + \"  first\"))\n                if (response.data.length != 0) {\n                    console.log(JSON.stringify(response.data.answer))\n                    this.setState({ a1: response.data[0].answer });\n                    this.setState({ a2: response.data[1].answer });\n                    this.setState({ a3: response.data[2].answer });\n                    this.setState({ a4: response.data[3].answer });\n                    this.setState({ a5: response.data[4].answer });\n                }\n                else {\n                    console.log(\"second\", response)\n                    this.setState({ a1: '' });\n                    this.setState({ a2: '' });\n                    this.setState({ a3: '' });\n                    this.setState({ a4: '' });\n                    this.setState({ a5: '' });\n                }\n          \n\n            if (response.data.length != 0) {\n                const da = [];\n                console.log(JSON.stringify(response.data))\n                response.data.map((datas) => {\n                  if (datas.type === 'd') {\n                    da.push(datas);\n                  }\n                })\n                this.setState({ dynamic: da })\n              }\n      \n              else {\n                this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n      \n              }\n            })\n\n    }\n\n\n    // handelAnswerchange1 = (event) => {\n\n    //     this.setState({\n    //         a1: event.target.value\n\n    //     })\n    // };\n\n\n    // handelAnswerchange2 = (event) => {\n    //     this.setState({\n    //         a2: event.target.value\n    //     })\n    // };\n\n    // handelAnswerchange3 = (event) => {\n    //     this.setState({\n    //         a3: event.target.value\n    //     })\n    // };\n\n    // handelAnswerchange4 = (event) => {\n    //     this.setState({\n    //         a4: event.target.value\n    //     })\n    // };\n\n    // handelAnswerchange5 = (event) => {\n    //     this.setState({\n    //         a5: event.target.value\n    //     })\n    // };\n\n\n    handleQuesChange = i => evt => {\n        const newques = this.state.dynamic.map((row, j) => {\n          if (i !== j) return row;\n          console.log('row', row)\n          return { ...row, question: evt.target.value };\n        });\n    \n        this.setState({ dynamic: newques });\n      };\n      handleAnsChange = i => evt => {\n        const newanswer = this.state.dynamic.map((row, j) => {\n          if (i !== j) return row;\n          return { ...row, answer: evt.target.value };\n        });\n    \n        this.setState({ dynamic: newanswer });\n      };\n      handleRemarkChange = i => evt => {\n        const newr = this.state.dynamic.map((row, j) => {\n          if (i !== j) return row;\n          return { ...row, remark: evt.target.value };\n        });\n    \n        this.setState({ dynamic: newr });\n      };\n\n         handleAdd = () => {\n            this.setState({\n            //   dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month })\n              \n            });\n          };\n    \n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(this.state)\n        let id = this.props.match.params.id\n        let month = this.props.match.params.month\nlet year=\"2019\"\n        if (this.validate() == true) {\n            const response = axios({\n                method: 'PATCH',\n                // url:'http://192.168.1.245:8095/qanda_static',\n                url: apiconstants.URL + `feedback/${id}/${month}/${year}`,\n                data: this.state\n\n              \n            });\n            // this.setState({\n            //     redirect: true\n            // })\n        }\n\n        for(let i=0;i<this.state.dynamic.length;i++){\n            if((this.state.dynamic[i].question=='' && this.state.dynamic[i].answer=='' && this.state.dynamic[i].remark==''))\n            {\n               this.setState({nullValue:false})\n              this.setState({\n                  redirect: true\n                })\n            \n            }\n            else if((this.state.dynamic[i].question==''|| this.state.dynamic[i].answer==''  ))\n            {\n             this.setState({nullValue:true})\n              break;\n            }\n          \n      \n          if(this.state.nullValue==true){\n            alert(\"Fields can't be empty\")\n            \n          }\n          else{\n            let id = this.props.match.params.id\n          let month = this.props.match.params.month\n          let year =\"2019\"\n          console.log(this.state.dynamic, 'state');\n          fetch(apiconstants.URL + `feedback/${id}/${month}/${year}`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.dynamic)\n      \n          }).then(res=> res)\n          .then(res => {\n            console.log(res.status)\n            \n            })\n            // this.setState({\n            //   redirect: true\n            // })\n      \n            //    if (this.state.redirect) {\n            //     return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n        \n            //   }\n         \n          }\n          \n        };\n\n     \n        \n\n       \n    };\n\n    async componentDidMount() {\n        console.log(\"Component Did mount started\")\n        let val=await this.time();\n        console.log(\"value is \"+val)\n        if(val===1){\n            console.log(\"it entered the if \"+val)\n            await setTimeout(()=>{this.setState({disabled:true})},);\n        }\n        \n    }\n\n    time = async () => {\n        console.log(\"state is:\"+JSON.stringify(this.state));\n\n        var id = this.props.match.params.id\n        var month = this.props.match.params.month\n\n        const response =await axios({\n            \n            method: 'get',\n            url: apiconstants.URL + `/employeetimestamp/${id}/${month}`,\n            // data: this.state\n        })\n            console.log(month)\n            return await response.data.time;\n    }\n\n\n    setRedirect1 = (event) => {\n        event.preventDefault();\n       console.log(this.state)\n        this.setState({\n            redirect1: true\n        })\n        \n    };\n\n\n     \n  \n    \n    validate() {\n        const { q1 } = this.state;\n        const { a1 } = this.state;\n        const { q2 } = this.state;\n        const { a2 } = this.state;\n        const { q3 } = this.state;\n        const { a3 } = this.state;\n        const { q4 } = this.state;\n        const { a4 } = this.state;\n        const { q5 } = this.state;\n        const { a5 } = this.state;\n\n        let formIsValid = true;\n        if (q1 == '' || a1 == '' || q2 == '' || a2 == '' || q3 == '' || a3 == '' || q4 == '' || a4 == '' || q5 == '' || a5 == '') {\n            alert('Please fill the field');\n            formIsValid = false;\n        }\n        else\n            return formIsValid;\n    }\n\n    render() {\n        // const {q1}=' How is everything going today? Tell me about this last week?',\n        // var {q2}=' What has gone well/not so well for you in this month?',\n        // var {q3}=' What challenges have you faced?',\n        // var {q4}=' How are you/your team progressing towards established goals?',\n        // var {q5}= ' What are you committing to between now and the next time we meet?',\n\n\n        {\n            var id = this.props.match.params.id\n            var month = this.props.match.params.month\n            if (this.state.redirect) {\n                return <Redirect to={\"/dynamic-form\"+\"/\"+  (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month)+\"/\"+(this.props.match.params.emp) +\"/\"+(this.props.match.params.pro)} />;\n\n            }\n        }\n\n        {\n            var id = this.props.match.params.id\n            var month = this.props.match.params.month\n            if (this.state.redirect1) {\n                return <Redirect to={\"/month\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) +\n                 \"/\" + (this.props.match.params.emp)+\"/\"+ (this.props.match.params.pro)} />;\n\n            }\n        }\n        var mid = this.props.match.params.mid;\n        return (\n            <div className=\"manbg\">\n                <Header mid={mid} />\n                <Label size='large' style={{color:\"black\",width :\"auto\"}} ><Icon name='user' />\n       \n       {this.props.match.params.pro}\n       </Label> \n   \n\n               <h1 style={{color:\"#303030\",paddingLeft:\"40px\"}}>Employee Feedback-1 : <span style={{color:\"darkblue\",fontWeight:\"bolder\"}}>{this.props.match.params.emp}</span> </h1>\n                <br />\n                <br />\n{/* <div className=\"formalign\">\n                <Form >\n                    <input value={this.state.question} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        value={this.state.a1}\n                        disabled={this.state.disabled}\n                        onChange={this.handelAnswerchange1}\n\n                    />\n                </Form>\n\n\n                <Form>\n                    <input value={this.state.question} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        value={this.state.a2}\n                        disabled={this.state.disabled}\n                        onChange={this.handelAnswerchange2}\n                    />\n                </Form>\n\n\n                <Form>\n                    <input value={this.state.question} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        value={this.state.a3}\n                        disabled={this.state.disabled}\n                        onChange={this.handelAnswerchange3} />\n                </Form>\n\n\n                <Form>\n                    <input value={this.state.question} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        disabled={this.state.disabled}\n                        value={this.state.a4}\n                        onChange={this.handelAnswerchange4} />\n                </Form>\n\n\n\n                <Form>\n                    <input value={this.state.question} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        value={this.state.a5}\n                        disabled={this.state.disabled}\n                        onChange={this.handelAnswerchange5} />\n                </Form>\n                </div> */}\n                <br />\n                <br />\n                <br />\n                <br />\n\n                <button onClick={this.setRedirect1}\n                            style={{ width :\"auto\",}}\n                            className=\"ui blue button\"> <Icon name=\"arrow circle left\" />Go Back</button>\n                {/* <button onClick={this.setRedirect}\n                    style={{ \"width\": \"200px\",float:\"right\" }}\n                    className=\"ui positive button\">Save & Next <Icon name=\"arrow circle right\" /> </button> */}\n                \n\n\n               <Form >\n                   \n            {this.state.dynamic.map((row, i) => (\n              <div style={{ paddingLeft: \"10%\" }} className=\"form1\">\n\n{/* static form*/}\n\n{/* <Form >\n                    <input value={' How is everything going today? Tell me about this last week?'} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        value={row.answer}\n                        disabled={this.state.disabled}\n                        onChange={this.handleAnsChange(i)}\n                    />\n                </Form>\n\n\n                <Form>\n                    <input value={' What has gone well/not so well for you in this month?'} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        value={row.answer}\n                        disabled={this.state.disabled}\n                        onChange={this.handleAnsChange(i)}\n                    />\n                </Form>\n\n\n                <Form>\n                    <input value={' What challenges have you faced?'} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        value={row.answer}\n                        disabled={this.state.disabled}\n                        onChange={this.handleAnsChange(i)} />\n                </Form>\n\n\n                <Form>\n                    <input value={' How are you/your team progressing towards established goals?'} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        disabled={this.state.disabled}\n                        value={row.answer}\n                        onChange={this.handleAnsChange(i)} />\n                </Form>\n\n\n\n                <Form>\n                    <input value={'What are you committing to between now and the next time we meet?'} />\n                    <TextArea style={{ backgroundColor: bgColors.Yellow }}\n                        placeholder='Answers'\n                        value={this.state.a5}\n                        disabled={this.state.disabled}\n                        onChange={this.handleAnsChange(i)} />\n                </Form> */}\n\n\n\n\n    {/* dynamic form       */}\n  \n                <TextArea style={{ color: \"black\", height: \"60px\" }}\n                  placeholder=\"Enter your question\"\n                  value={row.question}\n                  disabled={this.state.disabled}\n                  onChange={this.handleQuesChange(i)}\n               required >{row.question}</TextArea>\n                <br />\n  \n                <TextArea style={{ color: \"black\" }}\n                  placeholder='Enter answer here'\n                  value={row.answer}\n                  disabled={this.state.disabled}\n                  style={{ backgroundColor: bgColors.Yellow }}\n                  onChange={this.handleAnsChange(i)}\n                  required >{row.answer}</TextArea>\n                <br />\n  \n                <TextArea style={{ color: \"black\", height: \"60px\" }}\n                  placeholder='Remarks. If any?'\n                  style={{ backgroundColor: bgColors.Green }}\n                  value={row.remark}\n                  disabled={this.state.disabled}\n                  onChange={this.handleRemarkChange(i)}\n                  required  >{row.remark}</TextArea>\n              </div>\n            ))}\n          \n            {/* <button onClick={this.setRedirect1}\n              style={{ width: \"auto\", }}\n              className=\"ui blue button\"> <Icon name=\"arrow circle left\" />Go Back</button> */}\n  \n            <Button\n              type=\"button\"\n              onClick={this.handleAdd}\n              className=\"ui blue button\"\n              style={{ width: \"auto\" }} > Add more questions </Button>\n  \n            <Button onClick={this.handleSubmit} style={{ width: \"auto\" }} className=\"ui green button\" >   Save <Icon name=\"arrow circle right\" /></Button>\n          </Form>\n       \n          <Footer/>\n        </div>\n\n        )\n    }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}