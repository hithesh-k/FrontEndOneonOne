{"ast":null,"code":"var _jsxFileName = \"/home/nineleaps/FrontEnd-One-on-One/src/signuppg/signupMainbody.js\";\nimport React from 'react';\nimport './signupMainbody.css';\nimport SignupHeader from './signupHeader';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nexport default class SignupMainbody extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitUserRegistrationForm = async e => {\n      console.log(\"inside\");\n      e.preventDefault();\n      console.log(this.state);\n\n      if (this.validate() == true) {\n        const response = await axios({\n          method: 'post',\n          url: 'http://542f34f1.ngrok.io/employee',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: this.state\n        });\n\n        if (response.data === \"succesful\") {\n          this.props.history.push('/login');\n        } else if (response.data === \"existing\") {\n          alert('Credentials already exists!!!!');\n        } else {\n          alert('Fill the form correctly!!!');\n        }\n      } else {\n        alert(\"Wrong Credentials!!!!!!!!!!!!!!!!!!\");\n      } //   if (response.data === \"succesful\") {\n      //     this.props.history.push('/login')\n      // }\n      // else if (response.data === \"existing\") {\n      //     alert('Credentials already exists!!!!')\n      // }\n      // else {\n      //     alert('Fill the form correctly!!!')\n      // }\n\n    };\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      phone: \"\"\n    };\n  }\n\n  validate() {\n    const username = this.state.username;\n    const email = this.state.email;\n    const password = this.state.password;\n    const confirmPassword = this.state.confirmPassword;\n    const phone = this.state.phone;\n    var pattern = /^\\w+([.]?\\w+)*@gmail.com$/; // var pas = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/\n\n    var ph = /^(\\d{10})$/;\n    let formIsValid = true;\n\n    if (username == \"\") {\n      alert('Please enter your username');\n      formIsValid = false;\n    } else if (email == \"\") {\n      alert('Please enter your email');\n      formIsValid = false;\n    } else if (password == \"\") {\n      alert('Please enter your password');\n      formIsValid = false;\n    } else if (confirmPassword == \"\") {\n      alert('Please confirm your password');\n      formIsValid = false;\n    } else if (phone == \"\") {\n      alert('Please enter your phone number');\n      formIsValid = false;\n    } else if (!pattern.test(email)) {\n      alert('Invalid Email, Please try again');\n      formIsValid = false;\n    } // else if (!(pas.test(password))) {\n    //   alert('Invalid Password, Please try again');\n    //   formIsValid = false;\n    // }\n    else if (password !== confirmPassword) {\n        alert('Please Confirm your Password and try again');\n        formIsValid = false;\n      } else if (!ph.test(phone)) {\n        alert('Invalid Phone Number, Please try again');\n        formIsValid = false;\n      }\n\n    return formIsValid;\n  }\n\n  test() {}\n\n  render() {\n    const _this$state = this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword,\n          phone = _this$state.phone;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(SignupHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"firstbg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.submitUserRegistrationForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"ONE-ON-ONE\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"profile-name\",\n      className: \"profile-name-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      name: \"userRegistrationForm\",\n      className: \"form-signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"log\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"SIGN UP\"), React.createElement(\"input\", {\n      //className=\"{formErrors.username.length > 0 ? \"error\" : null}\"\n      type: \"text\",\n      id: \"inputUsername\",\n      name: \"username\",\n      className: \"form-control\",\n      placeholder: \"UserName\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      required: true,\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"inputEmail\",\n      name: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"inputPassword\",\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange //onChange={(e) => this.handleChange(e)}\n      ,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"inputConfirmPassword\",\n      name: \"confirmPassword\",\n      className: \"form-control\",\n      placeholder: \"Confirm Password\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange //onChange={(e) => this.handleChange(e)}\n      ,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phone\",\n      id: \"inputMobileNum\",\n      className: \"form-control\",\n      placeholder: \"Phone\",\n      value: this.state.phone,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-lg btn-primary btn-block btn-signin\",\n      onClick: this.submitUserRegistrationForm,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Sign up\")))))));\n  }\n\n}","map":{"version":3,"sources":["/home/nineleaps/FrontEnd-One-on-One/src/signuppg/signupMainbody.js"],"names":["React","SignupHeader","Redirect","axios","SignupMainbody","Component","constructor","props","handleChange","e","setState","target","name","value","submitUserRegistrationForm","console","log","preventDefault","state","validate","response","method","url","headers","data","history","push","alert","username","email","password","confirmPassword","phone","pattern","ph","formIsValid","test","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './signupMainbody.css'\nimport SignupHeader from './signupHeader'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios';\n\nexport default class SignupMainbody extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            phone: \"\",\n            \n        }\n    }\n    handleChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    submitUserRegistrationForm = async (e) => {\n        console.log(\"inside\")\n        e.preventDefault();\n        console.log(this.state)\n\n        if(this.validate()== true)\n        {\n          const response = await axios({\n            method: 'post',\n            url: 'http://542f34f1.ngrok.io/employee',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n\n            data: this.state });\n\n            if (response.data === \"succesful\") {\n          \n              this.props.history.push('/login')\n          }\n          else if (response.data === \"existing\") {\n              alert('Credentials already exists!!!!')\n          }\n          else {\n              alert('Fill the form correctly!!!')\n          }\n              \n        \n        }\n        else{\n          alert(\"Wrong Credentials!!!!!!!!!!!!!!!!!!\")\n        }\n\n      //   if (response.data === \"succesful\") {\n          \n      //     this.props.history.push('/login')\n      // }\n      // else if (response.data === \"existing\") {\n      //     alert('Credentials already exists!!!!')\n      // }\n      // else {\n      //     alert('Fill the form correctly!!!')\n      // }\n\n\n    }\n\n    validate() {\n      const { username } = this.state;\n      const { email } = this.state;\n      const { password } = this.state;\n      const { confirmPassword } = this.state;\n      const { phone } = this.state;\n  \n      var pattern = /^\\w+([.]?\\w+)*@gmail.com$/\n     // var pas = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/\n      var ph = /^(\\d{10})$/\n      let formIsValid = true;\n      if (username == \"\") {\n        alert('Please enter your username');\n        formIsValid = false;\n      }\n      else if (email == \"\") {\n        alert('Please enter your email');\n        formIsValid = false;\n      }\n      else if (password == \"\") {\n        alert('Please enter your password');\n        formIsValid = false;\n      }\n      else if (confirmPassword == \"\") {\n        alert('Please confirm your password');\n        formIsValid = false;\n      }\n      else if (phone == \"\") {\n        alert('Please enter your phone number');\n        formIsValid = false;\n      }\n  \n      else if (!(pattern.test(email))) {\n  \n        alert('Invalid Email, Please try again');\n        formIsValid = false;\n      }\n  \n      // else if (!(pas.test(password))) {\n      //   alert('Invalid Password, Please try again');\n      //   formIsValid = false;\n      // }\n      else if (password !== confirmPassword) {\n        alert('Please Confirm your Password and try again')\n        formIsValid = false;\n      }\n      else if (!(ph.test(phone))) {\n        alert('Invalid Phone Number, Please try again');\n        formIsValid = false;\n  \n      }\n      return formIsValid;\n    }\n\n    test(){\n\n    }\n\n\n    render() {\n        const { username, email, password, confirmPassword, phone } = this.state\n        return (\n\n            <div>\n                <SignupHeader />\n                <div className=\"firstbg\">\n\n                    <form onSubmit={this.submitUserRegistrationForm}>\n                        <h1 className='head'>ONE-ON-ONE</h1>\n                        <div className=\"container\">\n                            <div className=\"card card-container\">\n\n                                <p id=\"profile-name\" className=\"profile-name-card\" />\n                                <form name=\"userRegistrationForm\" className=\"form-signin\" >\n                                    <h1 className=\"log\">SIGN UP</h1>\n\n\n                                    <input\n                                        //className=\"{formErrors.username.length > 0 ? \"error\" : null}\"\n                                        type=\"text\"\n                                        id=\"inputUsername\"\n                                        name=\"username\"\n                                        className=\"form-control\"\n                                        placeholder=\"UserName\"\n                                        value={this.state.username}\n                                        onChange={this.handleChange}\n                                        required autoFocus />\n\n                                    <input type=\"email\"\n                                        id=\"inputEmail\"\n                                        name=\"email\"\n                                        className=\"form-control\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        onChange={this.handleChange}\n                                        \n                                        required />\n                                   \n\n\n                                    <input type=\"password\"\n                                        id=\"inputPassword\"\n                                        name=\"password\"\n                                        className=\"form-control\"\n                                        placeholder=\"Password\"\n                                        value={this.state.password}\n                                        onChange={this.handleChange}\n                                        //onChange={(e) => this.handleChange(e)}\n                                        required />\n                                  \n                                    <input type=\"password\"\n                                        id=\"inputConfirmPassword\"\n                                        name=\"confirmPassword\"\n                                        className=\"form-control\"\n                                        placeholder=\"Confirm Password\"\n                                        value={this.state.confirmPassword}\n                                        onChange={this.handleChange}\n                                        //onChange={(e) => this.handleChange(e)}\n                                        required />\n                                    \n\n\n                                    <input type=\"text\"\n                                        name=\"phone\"\n\n                                        id=\"inputMobileNum\"\n                                        className=\"form-control\"\n                                        placeholder=\"Phone\"\n                                        value={this.state.phone}\n                                        onChange={this.handleChange}\n\n\n                                        required />\n                                    \n\n                                    <br />\n                                    <button type=\"button\" className=\"btn btn-lg btn-primary btn-block btn-signin\"\n                                        onClick={this.submitUserRegistrationForm}\n                                        type=\"submit\">\n                                        Sign up\n                            </button>\n\n                                </form>\n\n                            </div>\n                            {/* /card-container */}\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}