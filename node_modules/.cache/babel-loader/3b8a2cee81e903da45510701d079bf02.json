{"ast":null,"code":"import _objectSpread from \"/home/nineleaps/FrontEnd-One-on-One/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/nineleaps/FrontEnd-One-on-One/src/Pages/Goals.js\";\nimport React, { Component } from \"react\";\nimport { Form, TextArea, Button, Icon, Label } from 'semantic-ui-react';\nimport Header from \"../Components/Header\";\nimport ManagerNav from \"../Managerpg1/ManagerNav\";\nimport \"../Managerpg1/Managermain.css\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Footer from \"../Components/Footer\";\nimport apiconstants from '../employee/config';\nimport Tab from \"../Components/Tab\";\nimport Year from \"../Components/YearMonthPicker\";\n\nclass Managermain5 extends React.Component {\n  constructor() {\n    super();\n\n    this.handleGoalsChange = i => evt => {\n      const newGoals = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        return _objectSpread({}, row, {\n          goal: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newGoals\n      });\n    };\n\n    this.handleDeadlineChange = i => evt => {\n      const newDeadline = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        return _objectSpread({}, row, {\n          deadline: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newDeadline\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      let id = this.props.match.params.id;\n      fetch(apiconstants.URL + \"addgoals/\".concat(id, \"/\").concat(this.state.mm, \"/\").concat(this.state.yr), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.dynamic)\n      });\n    };\n\n    this.handleAdd = () => {\n      this.setState({\n        dynamic: this.state.dynamic.concat({\n          id: this.props.match.params.id,\n          goal: \"\",\n          deadline: \"\"\n        })\n      });\n    };\n\n    this.setRedirect1 = event => {\n      event.preventDefault();\n      console.log(this.state);\n      this.setState({\n        redirect1: true\n      });\n    };\n\n    this.store_Year = year => {\n      this.setState({\n        yr: year\n      }, () => {\n        this.prepopulate(this.state.id + '', this.state.mm + '', this.state.yr + '');\n      });\n    };\n\n    this.store_Month = mon => {\n      this.setState({\n        mm: mon\n      }, () => this.prepopulate(this.state.id + '', this.state.mm + '', this.state.yr + ''));\n    };\n\n    this.state = {\n      dynamic: [],\n      locationPath: \"\",\n      mm: new Date().getMonth() + 1,\n      yr: new Date().getFullYear(),\n      id: null\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      locationPath: this.props.history.location.pathname\n    });\n    let id = this.props.match.params.id;\n    this.setState({\n      id: id\n    });\n    this.prepopulate(id + '', this.state.mm + '', this.state.yr + ''); // const response = axios({\n    //     method: 'GET',\n    //   //   url: 'http://192.168.1.245:8095/add_goals',\n    //     url: apiconstants.URL+`viewgoal/${id}/${month}`,\n    // }) \n    //     .then(response => {\n    //       console.log(response)\n    //         if (response.data.length != 0) {\n    //           const da = [];\n    //             console.log(JSON.stringify(response.data))\n    //             response.data.map((datas)=>{\n    //               da.push(datas);\n    //             })\n    //             this.setState({ dynamic: da })\n    //           }\n    //         else {\n    //             this.setState({ dynamic: this.state.dynamic.concat({id:this.props.match.params.id, goals:\"\", deadline:\"\", month: this.props.match.params.month}) });\n    //           }\n    //     })\n  }\n\n  prepopulate(id, mon, year) {\n    axios({\n      method: 'GET',\n      url: apiconstants.URL + \"viewgoal/\".concat(id, \"/\").concat(mon, \"/\").concat(year)\n    }).then(response => {\n      console.log(response.data); // console.log(response.data[1].answer)\n\n      this.setState({\n        dynamic: response.data\n      });\n    });\n  }\n\n  render() {\n    const pathURL = this.state.locationPath; // {\n    //     var id = this.props.match.params.id\n    //     var month = this.props.match.params.month\n    //     if (this.state.redirect1) {\n    //         return <Redirect to={\"/month\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) +\n    //          \"/\" + (this.props.match.params.emp)+\"/\"+ (this.props.match.params.pro)} />;\n    //     }\n    // }\n\n    {\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n\n      if (this.state.redirect1) {\n        return React.createElement(Redirect, {\n          to: \"/manager\" + \"/\" + this.props.match.params.mid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        });\n      }\n    }\n    var mid = this.props.match.params.mid;\n    return React.createElement(\"div\", {\n      className: \"manbg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Header, {\n      mid: mid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      mid: this.props.match.params.mid,\n      id: this.props.match.params.id,\n      month: this.props.match.params.month,\n      emp: this.props.match.params.emp,\n      pro: this.props.match.params.pro,\n      pathURL: pathURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(Label, {\n      size: \"large\",\n      style: {\n        color: \"black\",\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), this.props.match.params.pro), React.createElement(Year, {\n      changeYear: this.store_Year.bind(this),\n      changeMonth: this.store_Month.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.props.match.params.emp, \"'s Goals\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), this.state.dynamic.map((row, i) => React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"10%\"\n      },\n      className: \"form1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      style: {\n        color: \"black\",\n        width: \"400px\",\n        height: \"50px\"\n      },\n      placeholder: \"Enter Goals\",\n      value: row.goal,\n      onChange: this.handleGoalsChange(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"date\",\n      style: {\n        color: \"black\"\n      },\n      placeholder: \"Enter Deadline\",\n      value: row.goaltime,\n      onChange: this.handleDeadlineChange(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      onClick: this.setRedirect1,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui blue button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"arrow circle left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), \"Go Back\"), React.createElement(Button, {\n      type: \"button\",\n      onClick: this.handleAdd,\n      className: \"ui green button\",\n      style: {\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"add circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }), \"Add More Goals\"), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui green button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"  \", React.createElement(Icon, {\n      name: \"arrow circle save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), \" Save\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Managermain5;","map":{"version":3,"sources":["/home/nineleaps/FrontEnd-One-on-One/src/Pages/Goals.js"],"names":["React","Component","Form","TextArea","Button","Icon","Label","Header","ManagerNav","Redirect","axios","Footer","apiconstants","Tab","Year","Managermain5","constructor","handleGoalsChange","i","evt","newGoals","state","dynamic","map","row","j","goal","target","value","setState","handleDeadlineChange","newDeadline","deadline","handleSubmit","e","preventDefault","id","props","match","params","fetch","URL","mm","yr","method","headers","body","JSON","stringify","handleAdd","concat","setRedirect1","event","console","log","redirect1","store_Year","year","prepopulate","store_Month","mon","locationPath","Date","getMonth","getFullYear","componentWillMount","history","location","pathname","url","then","response","data","render","pathURL","month","mid","emp","pro","color","width","bind","paddingLeft","height","goaltime"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\n\n\n\nimport { Form, TextArea,Button,Icon,Label } from 'semantic-ui-react'\nimport Header from \"../Components/Header\";\n\n\nimport ManagerNav from \"../Managerpg1/ManagerNav\"\nimport \"../Managerpg1/Managermain.css\"\nimport {Redirect} from \"react-router-dom\";\nimport axios from \"axios\"\nimport Footer from \"../Components/Footer\";\nimport apiconstants from '../employee/config';\nimport Tab from \"../Components/Tab\"\nimport Year from \"../Components/YearMonthPicker\"\n\nclass Managermain5 extends React.Component {\n        constructor() {\n          super()\n          this.state = {\n            dynamic: [],\n            locationPath:\"\",\n            mm:(new Date().getMonth()+1),\n            yr:(new Date().getFullYear()),\n            id:null,\n          };\n         \n       \n            }\n          \n        componentWillMount() {\n            this.setState({locationPath:this.props.history.location.pathname})\n            let id = this.props.match.params.id\n            this.setState({id:id})\n            \n            this.prepopulate(id+'',this.state.mm+'',this.state.yr+'')\n          // const response = axios({\n          //     method: 'GET',\n          //   //   url: 'http://192.168.1.245:8095/add_goals',\n          //     url: apiconstants.URL+`viewgoal/${id}/${month}`,\n             \n          // }) \n          //     .then(response => {\n          //       console.log(response)\n    \n          //         if (response.data.length != 0) {\n          //           const da = [];\n          //             console.log(JSON.stringify(response.data))\n          //             response.data.map((datas)=>{\n          //               da.push(datas);\n          //             })\n          //             this.setState({ dynamic: da })\n                    \n                     \n          //           }\n    \n                     \n                  \n          //         else {\n        \n                    \n          //             this.setState({ dynamic: this.state.dynamic.concat({id:this.props.match.params.id, goals:\"\", deadline:\"\", month: this.props.match.params.month}) });\n                     \n                     \n          //           }\n          //     })\n    \n          }\n\n\n          prepopulate(id,mon,year){\n            axios({\n              method: 'GET',\n              url: apiconstants.URL + `viewgoal/${id}/${mon}/${year}`,\n            })\n              .then(response => {\n                console.log(response.data)\n                // console.log(response.data[1].answer)\n                this.setState({ dynamic: response.data })\n                \n              })\n        \n          }\n          \n    \n        handleGoalsChange = i => evt => {\n          const newGoals= this.state.dynamic.map((row, j) => {\n            if (i !== j) return row;\n            return { ...row, goal: evt.target.value};\n          });\n      \n          this.setState({ dynamic: newGoals });\n        };\n        handleDeadlineChange = i => evt => {\n            const newDeadline= this.state.dynamic.map((row, j) => {\n              if (i !== j) return row;\n              return { ...row, deadline: evt.target.value};\n            });\n        \n            this.setState({ dynamic: newDeadline});\n          };\n        \n\n\n\n\n\n         \n    \n        // handleSubmit = e => {\n        //     e.preventDefault();\n        //     var id=this.props.match.params.id\n        //     var month=this.props.match.params.month\n        //     var emp=this.props.match.params.emp\n        //     console.log(JSON.stringify(this.state.dynamic));\n        //         fetch( apiconstants.URL+`addgoals/${id}/${month}`,{\n        //             method:'POST',\n        //             headers:{\n        //                 'Content-Type':'application/json'\n        //             },\n        //             body:JSON.stringify(this.state.dynamic)\n        //         }).then(res=>{\n        //             console.log(res)\n        //         }).then(response=>console.log(response))\n        // };\n\n\n        handleSubmit=async(e)=>{\n          e.preventDefault();\n          let id = this.props.match.params.id\n          fetch(apiconstants.URL + `addgoals/${id}/${this.state.mm}/${this.state.yr}`, {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(this.state.dynamic)\n          \n        })\n        }\n    \n      \n        handleAdd = () => {\n          this.setState({\n           \n            dynamic: this.state.dynamic.concat({ id:this.props.match.params.id, goal:\"\" ,deadline:\"\" ,  })\n         \n           \n          });\n        };\n\n        setRedirect1 = (event) => {\n          event.preventDefault();\n         console.log(this.state)\n          this.setState({\n              redirect1: true\n          })\n        \n      };\n\n\n      store_Year=(year)=>{\n        this.setState({\n          yr:year\n        },()=>{\n          \n          this.prepopulate(this.state.id+'',this.state.mm+'',this.state.yr+'')\n        })\n      }\n      store_Month=(mon)=>{\n        this.setState({\n          mm:mon\n        },()=>this.prepopulate(this.state.id+'',this.state.mm+'',this.state.yr+''))\n      }\n\n\n\n        render() {\n            const pathURL=this.state.locationPath;\n            // {\n            //     var id = this.props.match.params.id\n            //     var month = this.props.match.params.month\n            //     if (this.state.redirect1) {\n            //         return <Redirect to={\"/month\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) +\n            //          \"/\" + (this.props.match.params.emp)+\"/\"+ (this.props.match.params.pro)} />;\n            //     }\n            // }\n\n\n            {\n              var id = this.props.match.params.id\n              var month = this.props.match.params.month\n              if (this.state.redirect1) {\n                return <Redirect to={\"/manager\" + \"/\" + (this.props.match.params.mid)} />;\n        \n              }\n            }\n\n        var mid = this.props.match.params.mid;\n          return (\n              <div className=\"manbg\">\n                       <Header mid={mid}/>\n                       <Tab \n                       mid={this.props.match.params.mid}  \n                       id={this.props.match.params.id}  \n                       month={this.props.match.params.month}  \n                       emp={this.props.match.params.emp} \n                       pro={this.props.match.params.pro}  \n                        pathURL={pathURL}\n                        />\n                       <Label size='large' style={{color:\"black\",width :\"auto\"}} ><Icon name='user' />\n       \n       {this.props.match.params.pro}\n      </Label> \n      <Year changeYear={this.store_Year.bind(this)} changeMonth={this.store_Month.bind(this)}/>\n                   <br />\n                   <br />\n                  \n                   <h1 style={{color:\"black\"}}>{this.props.match.params.emp}'s Goals</h1>\n                   <br />\n                   <br />\n                   <br />\n                   \n                    \n            \n              {this.state.dynamic.map((row, i) => (\n                  <div style={{paddingLeft:\"10%\"}} className=\"form1\">\n                      \n             <TextArea  style={{color:\"black\",width:\"400px\",height:\"50px\"}}\n                        placeholder=\"Enter Goals\" \n                        value={row.goal}\n                        onChange={this. handleGoalsChange(i) }/>\n             \n             \n            <br />\n             <input type='date' style={{color:\"black\",}}\n                       placeholder=\"Enter Deadline\"\n                       value={row.goaltime}\n                       onChange={this. handleDeadlineChange(i) }\n                       />\n                       \n            \n         <br />\n         <br />\n        </div>\n              ))}\n\n\n<button onClick={this.setRedirect1}\n                            style={{ width :\"auto\",}}\n                            className=\"ui blue button\"> <Icon name=\"arrow circle left\" />Go Back</button>\n\n              <Button\n                type=\"button\"\n                onClick={this.handleAdd}\n                className=\"ui green button\"\n                style={{ width :\"auto\"}}>\n                  <Icon name=\"add circle\" />\n                Add More Goals\n              </Button>\n              \n              <Button onClick={this.handleSubmit} style={{ width :\"auto\"}} className=\"ui green button\" >  <Icon name=\"arrow circle save\" /> Save</Button>\n              \n          \n             \n            \n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <Footer/>\n            </div>\n    \n          );\n        }\n      \n      \n      }\n      export default Managermain5"]},"metadata":{},"sourceType":"module"}