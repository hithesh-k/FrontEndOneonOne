{"ast":null,"code":"var _jsxFileName = \"/home/nineleaps/FrontEnd-One-on-One/src/Pages/FeedbackandGoals.js\";\nimport React from 'react';\nimport 'semantic-ui/dist/semantic.min.css';\nimport Header from \"../Components/Header\";\nimport Tab from \"../Components/Tab\";\nimport Footer from \"../Components/Footer\";\nimport axios from 'axios';\nimport { Form, TextArea, Button, Segment, Icon, Label } from 'semantic-ui-react';\nimport { Redirect } from \"react-router-dom\";\nimport apiconstants from '../employee/config';\nvar bgColors = {\n  \"Yellow\": \"#d3d3d3\"\n};\n\nclass Employeepage1 extends React.Component {\n  constructor() {\n    super();\n\n    this.setRedirect = event => {\n      event.preventDefault();\n      console.log(this.state);\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.setRedirect1 = event => {\n      event.preventDefault();\n      console.log(this.state);\n      this.setState({\n        redirect1: true\n      });\n    };\n\n    this.state = {\n      form: []\n    };\n  }\n\n  componentWillMount() {\n    let id = this.props.match.params.id;\n    let month = this.props.match.params.month;\n    const response = axios({\n      method: 'POST',\n      url: apiconstants.URL + \"updatemonthvalue/\".concat(id, \"/\").concat(month)\n    }).then(res => {\n      if (res.data.length != 0) {\n        this.setState({\n          form: res.data\n        });\n      } else {\n        alert(' feedback is not been recorded ');\n        this.setState({\n          form: []\n        });\n      }\n\n      console.log(res.data);\n    });\n  }\n\n  render() {\n    //     {\n    //       if (this.state.redirect) {\n    //           return <Redirect to={\"/em-goals\"+ \"/\" +this.props.match.params.id+ \"/\" +this.props.match.params.emp + \"/\" +this.props.match.params.month }/>;\n    //       }\n    //   }\n    //   {\n    //     if (this.state.redirect1) {\n    //         return <Redirect to={\"/em-month\"+\"/\"+ this.props.match.params.id+\"/\"+ this.props.match.params.emp}/>;\n    //     }\n    // }\n    return React.createElement(\"div\", {\n      className: \"manbg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Header, {\n      idd: this.props.match.params.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      mid: this.props.match.params.mid,\n      id: this.props.match.params.id,\n      month: this.props.match.params.month,\n      emp: this.props.match.params.emp,\n      pro: this.props.match.params.pro // pathURL={pathURL}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Label, {\n      size: \"large\",\n      style: {\n        color: \"black\",\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), this.props.match.params.emp), this.state.form.map(el => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: el.qno + \".\" + el.question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        backgroundColor: bgColors.Yellow\n      },\n      value: el.answer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui green button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"  I Agree\"), React.createElement(\"button\", {\n      onClick: this.DisagreeForm,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui red button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Disagree\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Employeepage1;","map":{"version":3,"sources":["/home/nineleaps/FrontEnd-One-on-One/src/Pages/FeedbackandGoals.js"],"names":["React","Header","Tab","Footer","axios","Form","TextArea","Button","Segment","Icon","Label","Redirect","apiconstants","bgColors","Employeepage1","Component","constructor","setRedirect","event","preventDefault","console","log","state","setState","redirect","setRedirect1","redirect1","form","componentWillMount","id","props","match","params","month","response","method","url","URL","then","res","data","length","alert","render","mid","emp","pro","color","width","map","el","qno","question","backgroundColor","Yellow","answer","DisagreeForm"],"mappings":"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","sourcesContent":["import React from 'react'\nimport 'semantic-ui/dist/semantic.min.css';\nimport Header from \"../Components/Header\";\nimport Tab from \"../Components/Tab\"\nimport Footer from \"../Components/Footer\";\nimport axios from 'axios'\nimport { Form, TextArea,Button,Segment,Icon,Label } from 'semantic-ui-react';\nimport {Redirect} from \"react-router-dom\";\nimport apiconstants from '../employee/config';\n\nvar bgColors = {\n    \"Yellow\": \"#d3d3d3\",\n};\n\nclass Employeepage1 extends React.Component {\n    \n        constructor() {\n          super();\n          this.state = {\n            form: [] };\n        }\n        \n        componentWillMount() {\n          let id=this.props.match.params.id\n          let month=this.props.match.params.month\n          const response = axios({\n              method: 'POST',\n              url: apiconstants.URL+`updatemonthvalue/${id}/${month}`,\n              \n          })\n          .then(res =>{\n            if(res.data.length!=0){\n\n              this.setState({form:res.data})\n            }\nelse{\nalert(' feedback is not been recorded ')\n  this.setState({form:[]});\n}\nconsole.log(res.data)      \n        })\n      }\n    setRedirect = (event) => {\n      event.preventDefault();\n     console.log(this.state)\n      this.setState({\n          redirect: true\n      })\n  };\n\n  setRedirect1 = (event) => {\n    event.preventDefault();\n   console.log(this.state)\n    this.setState({\n        redirect1: true\n    })\n};\n\n\nD\n\n\n \n\n        render() {\n\n      //     {\n      //       if (this.state.redirect) {\n      //           return <Redirect to={\"/em-goals\"+ \"/\" +this.props.match.params.id+ \"/\" +this.props.match.params.emp + \"/\" +this.props.match.params.month }/>;\n\n      //       }\n      //   }\n      //   {\n      //     if (this.state.redirect1) {\n      //         return <Redirect to={\"/em-month\"+\"/\"+ this.props.match.params.id+\"/\"+ this.props.match.params.emp}/>;\n\n      //     }\n      // }\n          return (\n            \n            <div className=\"manbg\">\n          <Header idd={this.props.match.params.id} />\n\n           <Tab mid={this.props.match.params.mid}  \n                    id={this.props.match.params.id}  \n                    month={this.props.match.params.month}  \n                    emp={this.props.match.params.emp} \n                    pro={this.props.match.params.pro}  \n                    // pathURL={pathURL}\n                     /> \n\n              <Label size='large' style={{color:\"black\",width :\"auto\"}} ><Icon name='user' />\n       \n      {this.props.match.params.emp}\n    </Label>   \n              \n                {this.state.form.map(el => (\n                      <Form>\n                        <input value= {el.qno+\".\"+el.question}/>\n                        <TextArea style={{backgroundColor: bgColors.Yellow}}\n                                  value=  {el.answer}\n         \n                        />\n                    </Form>\n                ))}\n\n <button \n                            style={{ width :\"auto\",}}\n                            className=\"ui green button\">  I Agree</button>\n\n\n\n<button onClick={this.DisagreeForm}\n                            style={{ width :\"auto\", }}\n                            className=\"ui red button\">Disagree</button> \n\n\n                <br/>\n                <br/>\n                <br/>\n                <Footer/>\n              \n            </div>\n          );\n        }\n      }\n\nexport default Employeepage1"]},"metadata":{},"sourceType":"module"}