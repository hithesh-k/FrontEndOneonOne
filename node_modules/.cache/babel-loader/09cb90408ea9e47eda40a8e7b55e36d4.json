{"ast":null,"code":"import _objectSpread from \"/home/nineleaps/FrontEnd-One-on-One/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/nineleaps/FrontEnd-One-on-One/src/Pages/Feedback.js\";\nimport axios from \"axios\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Icon, Label, TextArea, TabPane, Divider } from 'semantic-ui-react';\nimport Footer from \"../Components/Footer\";\nimport Header from \"../Components/Header\";\nimport apiconstants from '../employee/config';\nimport \"../Managerpg1/Managermain.css\";\nimport Tab from \"../Components/Tab\";\nvar bgColors = {\n  \"Green\": \"#8CC152\",\n  \"Yellow\": \"#d3d3d3\"\n};\nexport default class Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleQuesChange = i => evt => {\n      const newques = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        console.log('row', row);\n        return _objectSpread({}, row, {\n          question: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newques\n      });\n    };\n\n    this.handleAnsChange = i => evt => {\n      const newanswer = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        return _objectSpread({}, row, {\n          answer: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newanswer\n      });\n    };\n\n    this.handleRemarkChange = i => evt => {\n      const newr = this.state.dynamic.map((row, j) => {\n        if (i !== j) return row;\n        return _objectSpread({}, row, {\n          remark: evt.target.value\n        });\n      });\n      this.setState({\n        dynamic: newr\n      });\n    };\n\n    this.handleAdd = () => {\n      this.setState({\n        dynamic: this.state.dynamic.concat({\n          id: this.props.match.params.id,\n          question: \"\",\n          answer: \"\",\n          remark: \"\",\n          month: this.props.match.params.month\n        })\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      console.log(this.state);\n      let id = this.props.match.params.id;\n      let month = this.props.match.params.month;\n      let year = \"2019\";\n\n      if (this.validate() == true) {\n        const response = axios({\n          method: 'PATCH',\n          // url:'http://192.168.1.245:8095/qanda_static',\n          url: apiconstants.URL + \"feedback/\".concat(id, \"/\").concat(month, \"/\").concat(year),\n          data: this.state\n        }); // this.setState({\n        //     redirect: true\n        // })\n      }\n\n      for (let i = 0; i < this.state.dynamic.length; i++) {\n        if (this.state.dynamic[i].question == '' && this.state.dynamic[i].answer == '' && this.state.dynamic[i].remark == '') {\n          this.setState({\n            nullValue: false\n          });\n          this.setState({\n            redirect: true\n          });\n        } else if (this.state.dynamic[i].question == '' || this.state.dynamic[i].answer == '') {\n          this.setState({\n            nullValue: true\n          });\n          break;\n        }\n\n        if (this.state.nullValue == true) {\n          alert(\"Fields can't be empty\");\n        } else {\n          let id = this.props.match.params.id;\n          let month = this.props.match.params.month;\n          let year = \"2019\";\n          console.log(this.state.dynamic, 'state');\n          fetch(apiconstants.URL + \"feedback/\".concat(id, \"/\").concat(month, \"/\").concat(year), {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.dynamic)\n          }).then(res => res).then(res => {\n            console.log(res.status);\n          }); // this.setState({\n          //   redirect: true\n          // })\n          //    if (this.state.redirect) {\n          //     return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n          //   }\n        }\n      }\n\n      ;\n    };\n\n    this.time = async () => {\n      console.log(\"state is:\" + JSON.stringify(this.state));\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n      const response = await axios({\n        method: 'get',\n        url: apiconstants.URL + \"/employeetimestamp/\".concat(id, \"/\").concat(month) // data: this.state\n\n      });\n      console.log(month);\n      return await response.data.time;\n    };\n\n    this.setRedirect1 = event => {\n      event.preventDefault();\n      console.log(this.state);\n      this.setState({\n        redirect1: true\n      });\n    };\n\n    this.state = {\n      // question: ' How is everything going today? Tell me about this last week?',\n      // answer: '',\n      // question: ' What has gone well/not so well for you in this month?',\n      // answer: '',\n      // question: ' What challenges have you faced?',\n      // answer: '',\n      // question: ' How are you/your team progressing towards established goals?',\n      // answer: '',\n      // question: ' What are you committing to between now and the next time we meet?',\n      // answer: '',\n      disabled: false,\n      dynamic: [],\n      disabled: false,\n      nullValue: false,\n      locationPath: \"\"\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      locationPath: this.props.history.location.pathname\n    });\n    var id = this.props.match.params.id;\n    var month = this.props.match.params.month;\n    var year = \"2019\";\n    console.log(id);\n    const response = axios({\n      method: 'post',\n      // url: 'http://192.168.1.245:8095/updatemonthvalue',\n      url: apiconstants.URL + \"updatemonthvalue/\".concat(id, \"/\").concat(month, \"/\").concat(year),\n      data: this.state\n    }); // .then(response => {\n    //     console.log(JSON.stringify(response.data + \"  first\"))\n    //     if (response.data.length != 0) {\n    //         console.log(JSON.stringify(response.data.answer))\n    //         this.setState({ a1: response.data[0].answer });\n    //         this.setState({ a2: response.data[1].answer });\n    //         this.setState({ a3: response.data[2].answer });\n    //         this.setState({ a4: response.data[3].answer });\n    //         this.setState({ a5: response.data[4].answer });\n    //     }\n    //     else {\n    //         console.log(\"second\", response)\n    //         this.setState({ a1: '' });\n    //         this.setState({ a2: '' });\n    //         this.setState({ a3: '' });\n    //         this.setState({ a4: '' });\n    //         this.setState({ a5: '' });\n    //     }\n\n    if (response.data.length != 0) {\n      const da = [];\n      console.log(JSON.stringify(response.data));\n      response.data.map(datas => {\n        if (datas.type === 'd') {\n          da.push(datas);\n        }\n      });\n      this.setState({\n        dynamic: da\n      });\n    } else {\n      this.setState({\n        dynamic: this.state.dynamic.concat({\n          id: this.props.match.params.id,\n          question: \"\",\n          answer: \"\",\n          remark: \"\",\n          month: this.props.match.params.month\n        })\n      });\n    }\n  } // handelAnswerchange1 = (event) => {\n  //     this.setState({\n  //         a1: event.target.value\n  //     })\n  // };\n  // handelAnswerchange2 = (event) => {\n  //     this.setState({\n  //         a2: event.target.value\n  //     })\n  // };\n  // handelAnswerchange3 = (event) => {\n  //     this.setState({\n  //         a3: event.target.value\n  //     })\n  // };\n  // handelAnswerchange4 = (event) => {\n  //     this.setState({\n  //         a4: event.target.value\n  //     })\n  // };\n  // handelAnswerchange5 = (event) => {\n  //     this.setState({\n  //         a5: event.target.value\n  //     })\n  // };\n\n\n  async componentDidMount() {\n    console.log(\"Component Did mount started\");\n    let val = await this.time();\n    console.log(\"value is \" + val);\n\n    if (val === 1) {\n      console.log(\"it entered the if \" + val);\n      await setTimeout(() => {\n        this.setState({\n          disabled: true\n        });\n      });\n    }\n  }\n\n  validate() {\n    const q1 = this.state.q1;\n    const a1 = this.state.a1;\n    const q2 = this.state.q2;\n    const a2 = this.state.a2;\n    const q3 = this.state.q3;\n    const a3 = this.state.a3;\n    const q4 = this.state.q4;\n    const a4 = this.state.a4;\n    const q5 = this.state.q5;\n    const a5 = this.state.a5;\n    let formIsValid = true;\n\n    if (q1 == '' || a1 == '' || q2 == '' || a2 == '' || q3 == '' || a3 == '' || q4 == '' || a4 == '' || q5 == '' || a5 == '') {\n      alert('Please fill the field');\n      formIsValid = false;\n    } else return formIsValid;\n  }\n\n  render() {\n    // const {q1}=' How is everything going today? Tell me about this last week?',\n    // var {q2}=' What has gone well/not so well for you in this month?',\n    // var {q3}=' What challenges have you faced?',\n    // var {q4}=' How are you/your team progressing towards established goals?',\n    // var {q5}= ' What are you committing to between now and the next time we meet?',\n    const pathURL = this.state.locationPath;\n    {\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/dynamic-form\" + \"/\" + this.props.match.params.mid + \"/\" + this.props.match.params.id + \"/\" + this.props.match.params.month + \"/\" + this.props.match.params.emp + \"/\" + this.props.match.params.pro,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        });\n      }\n    }\n    {\n      var id = this.props.match.params.id;\n      var month = this.props.match.params.month;\n\n      if (this.state.redirect1) {\n        return React.createElement(Redirect, {\n          to: \"/month\" + \"/\" + this.props.match.params.mid + \"/\" + this.props.match.params.id + \"/\" + this.props.match.params.emp + \"/\" + this.props.match.params.pro,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        });\n      }\n    }\n    var mid = this.props.match.params.mid;\n    return React.createElement(\"div\", {\n      className: \"manbg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(Header, {\n      mid: mid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(Tab, {\n      mid: this.props.match.params.mid,\n      id: this.props.match.params.id,\n      month: this.props.match.params.month,\n      emp: this.props.match.params.emp,\n      pro: this.props.match.params.pro,\n      pathURL: pathURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(Label, {\n      size: \"large\",\n      style: {\n        color: \"black\",\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }), this.props.match.params.pro), React.createElement(\"h1\", {\n      style: {\n        color: \"#303030\",\n        paddingLeft: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Employee Feedback-1 : \", React.createElement(\"span\", {\n      style: {\n        color: \"darkblue\",\n        fontWeight: \"bolder\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, this.props.match.params.emp), \" \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, this.state.dynamic.map((row, i) => React.createElement(\"div\", {\n      style: {\n        paddingLeft: \"10%\"\n      },\n      className: \"form1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      style: {\n        color: \"black\",\n        height: \"60px\"\n      },\n      placeholder: \"Enter your question\",\n      value: row.question,\n      disabled: this.state.disabled,\n      onChange: this.handleQuesChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, row.question), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        color: \"black\"\n      },\n      placeholder: \"Enter answer here\",\n      value: row.answer,\n      disabled: this.state.disabled,\n      style: {\n        backgroundColor: bgColors.Yellow\n      },\n      onChange: this.handleAnsChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, row.answer), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      style: {\n        color: \"black\",\n        height: \"60px\"\n      },\n      placeholder: \"Remarks. If any?\",\n      style: {\n        backgroundColor: bgColors.Green\n      },\n      value: row.remark,\n      disabled: this.state.disabled,\n      onChange: this.handleRemarkChange(i),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, row.remark))), React.createElement(\"button\", {\n      onClick: this.setRedirect1,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui blue button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"arrow circle left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }), \"Go Back\"), React.createElement(Button, {\n      type: \"button\",\n      onClick: this.handleAdd,\n      className: \"ui blue button\",\n      style: {\n        width: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \" Add more questions \"), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      style: {\n        width: \"auto\"\n      },\n      className: \"ui green button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"   Save \", React.createElement(Icon, {\n      name: \"arrow circle right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/nineleaps/FrontEnd-One-on-One/src/Pages/Feedback.js"],"names":["axios","React","Redirect","Button","Form","Icon","Label","TextArea","TabPane","Divider","Footer","Header","apiconstants","Tab","bgColors","Test","Component","constructor","props","handleQuesChange","i","evt","newques","state","dynamic","map","row","j","console","log","question","target","value","setState","handleAnsChange","newanswer","answer","handleRemarkChange","newr","remark","handleAdd","concat","id","match","params","month","handleSubmit","event","preventDefault","year","validate","response","method","url","URL","data","length","nullValue","redirect","alert","fetch","headers","body","JSON","stringify","then","res","status","time","setRedirect1","redirect1","disabled","locationPath","componentWillMount","history","location","pathname","da","datas","type","push","componentDidMount","val","setTimeout","q1","a1","q2","a2","q3","a3","q4","a4","q5","a5","formIsValid","render","pathURL","mid","emp","pro","color","width","paddingLeft","fontWeight","height","backgroundColor","Yellow","Green"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { Button, Form, Icon, Label, TextArea, TabPane,Divider } from 'semantic-ui-react';\nimport Footer from \"../Components/Footer\";\nimport Header from \"../Components/Header\";\nimport apiconstants from '../employee/config';\nimport \"../Managerpg1/Managermain.css\";\nimport Tab from \"../Components/Tab\"\n\n\nvar bgColors = {\n    \"Green\": \"#8CC152\",\n    \"Yellow\": \"#d3d3d3\",\n};\n\nexport default class Test extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            // question: ' How is everything going today? Tell me about this last week?',\n            // answer: '',\n            // question: ' What has gone well/not so well for you in this month?',\n            // answer: '',\n            // question: ' What challenges have you faced?',\n            // answer: '',\n            // question: ' How are you/your team progressing towards established goals?',\n            // answer: '',\n            // question: ' What are you committing to between now and the next time we meet?',\n            // answer: '',\n            disabled: false,\n            dynamic: [],\n            disabled: false,\n            nullValue: false,\n            locationPath:\"\"\n        }\n    }\n\n\n    componentWillMount() {\n      this.setState({locationPath:this.props.history.location.pathname})\n        var id = this.props.match.params.id\n        var month = this.props.match.params.month\n        var year = \"2019\"\n        console.log(id)\n        const response = axios({\n            method: 'post',\n            // url: 'http://192.168.1.245:8095/updatemonthvalue',\n            url: apiconstants.URL + `updatemonthvalue/${id}/${month}/${year}`,\n            data: this.state\n        })\n            // .then(response => {\n            //     console.log(JSON.stringify(response.data + \"  first\"))\n            //     if (response.data.length != 0) {\n            //         console.log(JSON.stringify(response.data.answer))\n            //         this.setState({ a1: response.data[0].answer });\n            //         this.setState({ a2: response.data[1].answer });\n            //         this.setState({ a3: response.data[2].answer });\n            //         this.setState({ a4: response.data[3].answer });\n            //         this.setState({ a5: response.data[4].answer });\n            //     }\n            //     else {\n            //         console.log(\"second\", response)\n            //         this.setState({ a1: '' });\n            //         this.setState({ a2: '' });\n            //         this.setState({ a3: '' });\n            //         this.setState({ a4: '' });\n            //         this.setState({ a5: '' });\n            //     }\n          \n\n            if (response.data.length != 0) {\n                const da = [];\n                console.log(JSON.stringify(response.data))\n                response.data.map((datas) => {\n                  if (datas.type === 'd') {\n                    da.push(datas);\n                  }\n                })\n                this.setState({ dynamic: da })\n              }\n      \n              else {\n                this.setState({ dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month }) });\n      \n              }\n            }\n\n    \n\n\n    // handelAnswerchange1 = (event) => {\n\n    //     this.setState({\n    //         a1: event.target.value\n\n    //     })\n    // };\n\n\n    // handelAnswerchange2 = (event) => {\n    //     this.setState({\n    //         a2: event.target.value\n    //     })\n    // };\n\n    // handelAnswerchange3 = (event) => {\n    //     this.setState({\n    //         a3: event.target.value\n    //     })\n    // };\n\n    // handelAnswerchange4 = (event) => {\n    //     this.setState({\n    //         a4: event.target.value\n    //     })\n    // };\n\n    // handelAnswerchange5 = (event) => {\n    //     this.setState({\n    //         a5: event.target.value\n    //     })\n    // };\n\n\n    handleQuesChange = i => evt => {\n        const newques = this.state.dynamic.map((row, j) => {\n          if (i !== j) return row;\n          console.log('row', row)\n          return { ...row, question: evt.target.value };\n        });\n    \n        this.setState({ dynamic: newques });\n      };\n      handleAnsChange = i => evt => {\n        const newanswer = this.state.dynamic.map((row, j) => {\n          if (i !== j) return row;\n          return { ...row, answer: evt.target.value };\n        });\n    \n        this.setState({ dynamic: newanswer });\n      };\n      handleRemarkChange = i => evt => {\n        const newr = this.state.dynamic.map((row, j) => {\n          if (i !== j) return row;\n          return { ...row, remark: evt.target.value };\n        });\n    \n        this.setState({ dynamic: newr });\n      };\n\n         handleAdd = () => {\n            this.setState({\n              dynamic: this.state.dynamic.concat({ id: this.props.match.params.id, question: \"\", answer: \"\", remark: \"\", month: this.props.match.params.month })\n              \n            });\n          };\n    \n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(this.state)\n        let id = this.props.match.params.id\n        let month = this.props.match.params.month\nlet year=\"2019\"\n        if (this.validate() == true) {\n            const response = axios({\n                method: 'PATCH',\n                // url:'http://192.168.1.245:8095/qanda_static',\n                url: apiconstants.URL + `feedback/${id}/${month}/${year}`,\n                data: this.state\n\n              \n            });\n            // this.setState({\n            //     redirect: true\n            // })\n        }\n\n        for(let i=0;i<this.state.dynamic.length;i++){\n            if((this.state.dynamic[i].question=='' && this.state.dynamic[i].answer=='' && this.state.dynamic[i].remark==''))\n            {\n               this.setState({nullValue:false})\n              this.setState({\n                  redirect: true\n                })\n            \n            }\n            else if((this.state.dynamic[i].question==''|| this.state.dynamic[i].answer==''  ))\n            {\n             this.setState({nullValue:true})\n              break;\n            }\n          \n      \n          if(this.state.nullValue==true){\n            alert(\"Fields can't be empty\")\n          }\n          \n          else{\n            let id = this.props.match.params.id\n          let month = this.props.match.params.month\n          let year =\"2019\"\n          console.log(this.state.dynamic, 'state');\n          fetch(apiconstants.URL + `feedback/${id}/${month}/${year}`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state.dynamic)\n      \n          }).then(res=> res)\n          .then(res => {\n            console.log(res.status)\n            \n            })\n            // this.setState({\n            //   redirect: true\n            // })\n      \n            //    if (this.state.redirect) {\n            //     return <Redirect to={\"/goals\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month) + \"/\" + (this.props.match.params.emp) + \"/\" + (this.props.match.params.pro)} />;\n        \n            //   }\n         \n          }\n          \n        };\n\n     \n        \n\n       \n    };\n\n    async componentDidMount() {\n        console.log(\"Component Did mount started\")\n        let val=await this.time();\n        console.log(\"value is \"+val)\n        if(val===1){\n            console.log(\"it entered the if \"+val)\n            await setTimeout(()=>{this.setState({disabled:true})},);\n        }\n        \n    }\n\n    time = async () => {\n        console.log(\"state is:\"+JSON.stringify(this.state));\n\n        var id = this.props.match.params.id\n        var month = this.props.match.params.month\n\n        const response =await axios({\n            \n            method: 'get',\n            url: apiconstants.URL + `/employeetimestamp/${id}/${month}`,\n            // data: this.state\n        })\n            console.log(month)\n            return await response.data.time;\n    }\n\n\n    setRedirect1 = (event) => {\n        event.preventDefault();\n       console.log(this.state)\n        this.setState({\n            redirect1: true\n        })\n        \n    };\n\n\n     \n  \n    \n    validate() {\n        const { q1 } = this.state;\n        const { a1 } = this.state;\n        const { q2 } = this.state;\n        const { a2 } = this.state;\n        const { q3 } = this.state;\n        const { a3 } = this.state;\n        const { q4 } = this.state;\n        const { a4 } = this.state;\n        const { q5 } = this.state;\n        const { a5 } = this.state;\n\n        let formIsValid = true;\n        if (q1 == '' || a1 == '' || q2 == '' || a2 == '' || q3 == '' || a3 == '' || q4 == '' || a4 == '' || q5 == '' || a5 == '') {\n            alert('Please fill the field');\n            formIsValid = false;\n        }\n        else\n            return formIsValid;\n    }\n    render() {\n        // const {q1}=' How is everything going today? Tell me about this last week?',\n        // var {q2}=' What has gone well/not so well for you in this month?',\n        // var {q3}=' What challenges have you faced?',\n        // var {q4}=' How are you/your team progressing towards established goals?',\n        // var {q5}= ' What are you committing to between now and the next time we meet?',\n\n\n        const pathURL=this.state.locationPath;\n\n\n       \n        {\n            var id = this.props.match.params.id\n            var month = this.props.match.params.month\n            if (this.state.redirect) {\n                return <Redirect to={\"/dynamic-form\"+\"/\"+  (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) + \"/\" + (this.props.match.params.month)+\"/\"+(this.props.match.params.emp) +\"/\"+(this.props.match.params.pro)} />;\n\n            }\n        }\n\n        {\n            var id = this.props.match.params.id\n            var month = this.props.match.params.month\n            if (this.state.redirect1) {\n                return <Redirect to={\"/month\" + \"/\" + (this.props.match.params.mid) + \"/\" + (this.props.match.params.id) +\n                 \"/\" + (this.props.match.params.emp)+\"/\"+ (this.props.match.params.pro)} />;\n\n            }\n        }\n        var mid = this.props.match.params.mid;\n        return (\n            <div className=\"manbg\">\n                <Header mid={mid} />\n\n               <Tab mid={this.props.match.params.mid}  \n                    id={this.props.match.params.id}  \n                    month={this.props.match.params.month}  \n                    emp={this.props.match.params.emp} \n                    pro={this.props.match.params.pro}  \n                    pathURL={pathURL}\n                     />\n\n                <Label size='large' style={{color:\"black\",width :\"auto\"}} ><Icon name='user' />\n       \n       {this.props.match.params.pro}\n       </Label> \n               <h1 style={{color:\"#303030\",paddingLeft:\"40px\"}}>Employee Feedback-1 : <span style={{color:\"darkblue\",fontWeight:\"bolder\"}}>{this.props.match.params.emp}</span> </h1>\n                <br />\n                <br />\n\n                <br />\n                <br />\n                <br />\n                <br />\n\n                               {/* <button onClick={this.setRedirect}\n                    style={{ \"width\": \"200px\",float:\"right\" }}\n                    className=\"ui positive button\">Save & Next <Icon name=\"arrow circle right\" /> </button> */}\n                \n\n\n                <Form >      \n            {this.state.dynamic.map((row, i) => (\n              <div style={{ paddingLeft: \"10%\" }} className=\"form1\">  \n                <TextArea style={{ color: \"black\", height: \"60px\" }}\n                  placeholder=\"Enter your question\"\n                  value={row.question}\n                  disabled={this.state.disabled}\n                  onChange={this.handleQuesChange(i)}\n               required >{row.question}</TextArea>\n                <br />\n  \n                <TextArea style={{ color: \"black\" }}\n                  placeholder='Enter answer here'\n                  value={row.answer}\n                  disabled={this.state.disabled}\n                  style={{ backgroundColor: bgColors.Yellow }}\n                  onChange={this.handleAnsChange(i)}\n                  required >{row.answer}</TextArea>\n                <br />\n  \n                <TextArea style={{ color: \"black\", height: \"60px\" }}\n                  placeholder='Remarks. If any?'\n                  style={{ backgroundColor: bgColors.Green }}\n                  value={row.remark}\n                  disabled={this.state.disabled}\n                  onChange={this.handleRemarkChange(i)}\n                  required  >{row.remark}</TextArea>\n              </div>\n            ))}\n          \n           \n   <button onClick={this.setRedirect1}\n                            style={{ width :\"auto\",}}\n                            className=\"ui blue button\"> <Icon name=\"arrow circle left\" />Go Back</button>\n\n            <Button\n              type=\"button\"\n              onClick={this.handleAdd}\n              className=\"ui blue button\"\n              style={{ width: \"auto\" }} > Add more questions </Button>\n  \n            <Button onClick={this.handleSubmit} style={{ width: \"auto\" }} className=\"ui green button\" >   Save <Icon name=\"arrow circle right\" /></Button>\n          </Form> \n   \n       \n          <Footer/>\n        </div>\n\n        )\n    }\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}