{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _style = _interopRequireDefault(require(\"styled-jsx/style\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _momentTimezone = _interopRequireDefault(require(\"moment-timezone\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar MONTHS_NAMES = {\n  Jan: 'January',\n  Feb: 'February',\n  Mar: 'March',\n  Apr: 'April',\n  May: 'May',\n  Jun: 'June',\n  Jul: 'July',\n  Aug: 'August',\n  Sep: 'September',\n  Oct: 'October',\n  Nov: 'November',\n  Dec: 'December'\n};\nvar VIEW_YEARS = 'YEARS';\nvar VIEW_MONTHS = 'MONTHS';\n\nvar YearMonthPicker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(YearMonthPicker, _Component);\n\n  _createClass(YearMonthPicker, null, [{\n    key: \"defaultProps\",\n    get: function get() {\n      return {\n        closeOnSelect: true\n      };\n    }\n  }, {\n    key: \"propTypes\",\n    get: function get() {\n      return {\n        onChange: _propTypes.default.func.isRequired,\n        closeOnSelect: _propTypes.default.bool\n      };\n    }\n  }]);\n\n  function YearMonthPicker(props) {\n    var _this;\n\n    _classCallCheck(this, YearMonthPicker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(YearMonthPicker).call(this, props));\n    var currentTime = new Date();\n    var startYear = props.currentYearMonth ? currentTime.getFullYear() : props.defaultYear;\n    var startMonth = props.currentYearMonth ? Object.keys(MONTHS_NAMES)[currentTime.getMonth()] : Object.keys(MONTHS_NAMES)[props.defaultMonth - 1];\n    _this.state = {\n      years: Array.from({\n        length: 12\n      }, function (_v, k) {\n        return k + startYear;\n      }),\n      selectedYear: startYear,\n      selectedMonth: startMonth,\n      currentView: startYear ? VIEW_MONTHS : VIEW_YEARS,\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(YearMonthPicker, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.body.removeEventListener('click', this.scheduleClose);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(selectedMonth, selectedYear) {\n      this.props.onChange(_momentTimezone.default.utc(\"\".concat(selectedMonth, \" \").concat(selectedYear), 'MMM YYYY'));\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.setState({\n        open: true\n      });\n      document.body.addEventListener('click', this.scheduleClose.bind(this));\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.setState({\n        open: false\n      });\n      document.body.removeEventListener('click', this.scheduleClose);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(event) {\n      event.stopPropagation();\n\n      if (this.timeoutClose) {\n        clearTimeout(this.timeoutClose);\n      }\n    }\n  }, {\n    key: \"scheduleClose\",\n    value: function scheduleClose() {\n      var _this2 = this;\n\n      if (this.timeoutClose) {\n        clearTimeout(this.timeoutClose);\n      }\n\n      this.timeoutClose = setTimeout(function () {\n        _this2.close();\n      }, 10);\n    }\n  }, {\n    key: \"selectMonthYear\",\n    value: function selectMonthYear(selectedMonth, selectedYear) {\n      this.setState({\n        selectedMonth: selectedMonth,\n        selectedYear: selectedYear\n      });\n      this.onChange(selectedMonth, selectedYear);\n    }\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      var _this$state = this.state,\n          currentView = _this$state.currentView,\n          selectedMonth = _this$state.selectedMonth,\n          selectedYear = _this$state.selectedYear,\n          years = _this$state.years;\n\n      if (currentView === VIEW_YEARS) {\n        if (selectedYear === years[0]) {\n          this.updateYears(years[0] - 12);\n        }\n\n        selectedYear = selectedYear - 1;\n      }\n\n      if (currentView === VIEW_MONTHS) {\n        var monthNumber = Object.keys(MONTHS_NAMES).findIndex(function (m) {\n          return m === selectedMonth;\n        });\n\n        if (monthNumber === 0) {\n          monthNumber = 11;\n\n          if (selectedYear === years[0]) {\n            this.updateYears(years[0] - 12);\n          }\n\n          selectedYear = selectedYear - 1;\n        } else {\n          monthNumber = monthNumber - 1;\n        }\n\n        selectedMonth = Object.keys(MONTHS_NAMES)[monthNumber];\n      }\n\n      this.selectMonthYear(selectedMonth, selectedYear);\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var _this$state2 = this.state,\n          currentView = _this$state2.currentView,\n          selectedMonth = _this$state2.selectedMonth,\n          selectedYear = _this$state2.selectedYear,\n          years = _this$state2.years;\n\n      if (currentView === VIEW_YEARS) {\n        if (selectedYear === years[11]) {\n          this.updateYears(years[11] + 1);\n        }\n\n        selectedYear = selectedYear + 1;\n      }\n\n      if (currentView === VIEW_MONTHS) {\n        var monthNumber = Object.keys(MONTHS_NAMES).findIndex(function (m) {\n          return m === selectedMonth;\n        });\n\n        if (monthNumber === 11) {\n          monthNumber = 0;\n\n          if (selectedYear === years[11]) {\n            this.updateYears(years[11] + 1);\n          }\n\n          selectedYear = selectedYear + 1;\n        } else {\n          monthNumber = monthNumber + 1;\n        }\n\n        selectedMonth = Object.keys(MONTHS_NAMES)[monthNumber];\n      }\n\n      this.selectMonthYear(selectedMonth, selectedYear);\n    }\n  }, {\n    key: \"updateYears\",\n    value: function updateYears(startYear) {\n      var years = Array.from({\n        length: 12\n      }, function (_v, k) {\n        return k + startYear;\n      });\n      this.setState({\n        years: years\n      });\n    }\n  }, {\n    key: \"renderMonths\",\n    value: function renderMonths() {\n      var _this3 = this;\n\n      var _this$state3 = this.state,\n          selectedMonth = _this$state3.selectedMonth,\n          selectedYear = _this$state3.selectedYear;\n      var closeOnSelect = this.props.closeOnSelect;\n      return Object.keys(MONTHS_NAMES).map(function (month, i) {\n        return _react.default.createElement(\"div\", {\n          selected: selectedMonth === month,\n          key: i,\n          onClick: function onClick() {\n            _this3.selectMonthYear(month, selectedYear);\n\n            if (closeOnSelect) {\n              _this3.close();\n            }\n          },\n          className: \"jsx-2985449870\" + \" \" + \"column\"\n        }, month, _react.default.createElement(_style.default, {\n          id: \"2985449870\"\n        }, [\".column.jsx-2985449870{cursor:pointer;font-size:16px;padding:5px 0;text-align:center;width:33.33%;}\", \".column.jsx-2985449870:hover{background-color:#ececec;}\"]));\n      });\n    }\n  }, {\n    key: \"renderYears\",\n    value: function renderYears() {\n      var _this4 = this;\n\n      var _this$state4 = this.state,\n          selectedYear = _this$state4.selectedYear,\n          selectedMonth = _this$state4.selectedMonth;\n      return this.state.years.map(function (year, i) {\n        var cname = year < _this4.props.minYear || year > _this4.props.maxYear ? \"column-disabled\" : \"column\";\n        return _react.default.createElement(\"div\", {\n          selected: selectedYear === year,\n          key: i,\n          onClick: function onClick() {\n            _this4.selectMonthYear(selectedMonth, year);\n\n            _this4.setState({\n              currentView: VIEW_MONTHS\n            });\n          },\n          className: \"jsx-1302388516\" + \" \" + (cname || \"\")\n        }, year, _react.default.createElement(_style.default, {\n          id: \"1302388516\"\n        }, [\".column.jsx-1302388516{cursor:pointer;font-size:16px;padding:5px 0;text-align:center;width:33.33%;}\", \".column.jsx-1302388516:hover{background-color:#ececec;}\", \".column-disabled.jsx-1302388516{pointer-events:none;font-size:16px;padding:5px 0;color:grey;text-align:center;width:33.33%;}\"]));\n      });\n    }\n  }, {\n    key: \"renderHead\",\n    value: function renderHead() {\n      var _this5 = this;\n\n      var _this$state5 = this.state,\n          currentView = _this$state5.currentView,\n          selectedMonth = _this$state5.selectedMonth,\n          selectedYear = _this$state5.selectedYear;\n      return _react.default.createElement(\"div\", {\n        className: \"jsx-341033505\" + \" \" + \"head\"\n      }, _react.default.createElement(\"div\", {\n        id: \"picker-prev\",\n        onClick: function onClick() {\n          if (_this5.state.years[0] > _this5.props.minYear) _this5.previous();\n        },\n        className: \"jsx-341033505\" + \" \" + \"column\"\n      }, \"<\"), _react.default.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this5.setState({\n            currentView: currentView === VIEW_YEARS ? VIEW_MONTHS : VIEW_YEARS\n          });\n        },\n        className: \"jsx-341033505\" + \" \" + \"column\"\n      }, \"\".concat(selectedMonth, \" \").concat(selectedYear)), _react.default.createElement(\"div\", {\n        id: \"picker-next\",\n        onClick: function onClick() {\n          if (_this5.state.years[11] < _this5.props.maxYear) _this5.next();\n        },\n        className: \"jsx-341033505\" + \" \" + \"column\"\n      }, \">\"), _react.default.createElement(_style.default, {\n        id: \"341033505\"\n      }, [\".head.jsx-341033505{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;font-weight:bold;}\", \".column.jsx-341033505{cursor:pointer;font-size:16px;padding:5px 0;text-align:center;width:33.33%;}\", \".column.jsx-341033505:hover{background-color:#ececec;}\"]));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$state6 = this.state,\n          selectedYear = _this$state6.selectedYear,\n          selectedMonth = _this$state6.selectedMonth,\n          open = _this$state6.open,\n          currentView = _this$state6.currentView;\n      return _react.default.createElement(\"div\", {\n        onClick: this.handleClick.bind(this),\n        className: \"jsx-1876002214\"\n      }, _react.default.createElement(\"input\", {\n        id: \"picker-input\",\n        onClick: function onClick() {\n          return _this6.open();\n        },\n        onChange: function onChange() {},\n        type: \"text\",\n        value: \"\".concat(MONTHS_NAMES[selectedMonth], \" \").concat(selectedYear),\n        className: \"jsx-1876002214\" + \" \" + \"input\"\n      }), open && _react.default.createElement(\"div\", {\n        id: \"year-month-picker\",\n        className: \"jsx-1876002214\" + \" \" + \"year-month-wrapper\"\n      }, this.renderHead(), _react.default.createElement(\"div\", {\n        className: \"jsx-1876002214\" + \" \" + \"year-month\"\n      }, currentView === VIEW_YEARS ? this.renderYears() : this.renderMonths())), _react.default.createElement(_style.default, {\n        id: \"1876002214\"\n      }, [\".year-month-wrapper.jsx-1876002214{max-width:300px;border:1px solid #f9f9f9;}\", \".year-month.jsx-1876002214{border:1px solid #f9f9f9;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;}\", \".head.jsx-1876002214{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;font-weight:bold;}\", \".input.jsx-1876002214{border-top:0 !important;margin-bottom:10px;font-size:14px !important;}\"]));\n    }\n  }]);\n\n  return YearMonthPicker;\n}(_react.Component);\n\nexports.default = YearMonthPicker;","map":null,"metadata":{},"sourceType":"script"}